<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230726 14:10:30.406" rpa="false" schemaversion="4">
<suite id="s1" name="Revenue" source="d:\Documents\GitHub\vite-react\test\testcases\revenue.robot">
<test id="s1-t1" name="SPL_01 Verify UI in Danh sách nhà cung cấp page displays correctly with design" line="10">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230726 14:10:32.430" endtime="20230726 14:10:32.443"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230726 14:10:32.445" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\a7a89cd9-2c70-4462-8682-38f0bbd26ee2"}</msg>
<msg timestamp="20230726 14:10:33.266" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\a7a89cd9-2c70-4462-8682-38f0bbd26ee2"}</msg>
<status status="PASS" starttime="20230726 14:10:32.444" endtime="20230726 14:10:33.266"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230726 14:10:34.480" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230726 14:10:34.481" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230726 14:10:33.267" endtime="20230726 14:10:34.482"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230726 14:10:34.487" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230726 14:10:34.482" endtime="20230726 14:10:34.487"/>
</kw>
<status status="PASS" starttime="20230726 14:10:32.429" endtime="20230726 14:10:34.488"/>
</kw>
<kw name="Then Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;admin_balan@getnada.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230726 14:10:34.500" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230726 14:10:34.499" endtime="20230726 14:10:34.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230726 14:10:34.501" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230726 14:10:34.500" endtime="20230726 14:10:34.501"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230726 14:10:34.505" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230726 14:10:34.502" endtime="20230726 14:10:34.506"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230726 14:10:34.511" level="INFO">Length is 0</msg>
<msg timestamp="20230726 14:10:34.512" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230726 14:10:34.509" endtime="20230726 14:10:34.512"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230726 14:10:34.513" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230726 14:10:34.512" endtime="20230726 14:10:34.513"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230726 14:10:34.514" level="INFO">Length is 0</msg>
<msg timestamp="20230726 14:10:34.514" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230726 14:10:34.514" endtime="20230726 14:10:34.514"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.515" endtime="20230726 14:10:34.515"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.516" endtime="20230726 14:10:34.516"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:34.515" endtime="20230726 14:10:34.516"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.517" endtime="20230726 14:10:34.517"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.517" endtime="20230726 14:10:34.517"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.518" endtime="20230726 14:10:34.518"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:34.516" endtime="20230726 14:10:34.518"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.519" endtime="20230726 14:10:34.519"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.519" endtime="20230726 14:10:34.521"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:34.518" endtime="20230726 14:10:34.522"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.526" endtime="20230726 14:10:34.527"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.527" endtime="20230726 14:10:34.528"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:34.523" endtime="20230726 14:10:34.528"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.529" endtime="20230726 14:10:34.529"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:34.528" endtime="20230726 14:10:34.530"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230726 14:10:34.531" endtime="20230726 14:10:34.531"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:34.530" endtime="20230726 14:10:34.532"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.533" endtime="20230726 14:10:34.533"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.533" endtime="20230726 14:10:34.533"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:34.532" endtime="20230726 14:10:34.533"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.534" endtime="20230726 14:10:34.534"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:34.533" endtime="20230726 14:10:34.534"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.535" endtime="20230726 14:10:34.535"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:34.534" endtime="20230726 14:10:34.536"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.536" endtime="20230726 14:10:34.536"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:34.536" endtime="20230726 14:10:34.536"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230726 14:10:34.537" endtime="20230726 14:10:34.538"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:34.536" endtime="20230726 14:10:34.538"/>
</branch>
<status status="PASS" starttime="20230726 14:10:34.514" endtime="20230726 14:10:34.538"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230726 14:10:34.539" level="INFO">Length is 23</msg>
<msg timestamp="20230726 14:10:34.542" level="INFO">${cnt} = 23</msg>
<status status="PASS" starttime="20230726 14:10:34.539" endtime="20230726 14:10:34.543"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230726 14:10:34.546" level="INFO">${text} = admin_balan@getnada.com</msg>
<status status="PASS" starttime="20230726 14:10:34.545" endtime="20230726 14:10:34.547"/>
</kw>
<status status="PASS" starttime="20230726 14:10:34.544" endtime="20230726 14:10:34.547"/>
</branch>
<status status="PASS" starttime="20230726 14:10:34.543" endtime="20230726 14:10:34.547"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230726 14:10:34.547" endtime="20230726 14:10:34.548"/>
</return>
<msg timestamp="20230726 14:10:34.548" level="INFO">${text} = admin_balan@getnada.com</msg>
<status status="PASS" starttime="20230726 14:10:34.498" endtime="20230726 14:10:34.548"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230726 14:10:34.549" endtime="20230726 14:10:34.549"/>
</return>
<msg timestamp="20230726 14:10:34.550" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230726 14:10:34.548" endtime="20230726 14:10:34.550"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230726 14:10:34.550" endtime="20230726 14:10:35.748"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230726 14:10:35.749" level="INFO">Fills the text 'admin_balan@getnada.com' in the given field.</msg>
<status status="PASS" starttime="20230726 14:10:35.748" endtime="20230726 14:10:35.794"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230726 14:10:35.795" level="INFO">Length is 23</msg>
<msg timestamp="20230726 14:10:35.795" level="INFO">${cnt} = 23</msg>
<status status="PASS" starttime="20230726 14:10:35.795" endtime="20230726 14:10:35.795"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230726 14:10:35.797" level="INFO">${STATE["Tên đăng nhập"]} = admin_balan@getnada.com</msg>
<status status="PASS" starttime="20230726 14:10:35.796" endtime="20230726 14:10:35.797"/>
</kw>
<status status="PASS" starttime="20230726 14:10:35.795" endtime="20230726 14:10:35.797"/>
</branch>
<status status="PASS" starttime="20230726 14:10:35.795" endtime="20230726 14:10:35.797"/>
</if>
<status status="PASS" starttime="20230726 14:10:34.495" endtime="20230726 14:10:35.797"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Ari123456#&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230726 14:10:35.798" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230726 14:10:35.798" endtime="20230726 14:10:35.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230726 14:10:35.800" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230726 14:10:35.799" endtime="20230726 14:10:35.800"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230726 14:10:35.801" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230726 14:10:35.801" endtime="20230726 14:10:35.801"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230726 14:10:35.802" level="INFO">Length is 0</msg>
<msg timestamp="20230726 14:10:35.802" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230726 14:10:35.801" endtime="20230726 14:10:35.802"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230726 14:10:35.802" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230726 14:10:35.802" endtime="20230726 14:10:35.802"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230726 14:10:35.803" level="INFO">Length is 0</msg>
<msg timestamp="20230726 14:10:35.803" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230726 14:10:35.803" endtime="20230726 14:10:35.803"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.803" endtime="20230726 14:10:35.803"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.804" endtime="20230726 14:10:35.804"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:35.803" endtime="20230726 14:10:35.804"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.804" endtime="20230726 14:10:35.805"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.805" endtime="20230726 14:10:35.805"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.805" endtime="20230726 14:10:35.806"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:35.804" endtime="20230726 14:10:35.806"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.806" endtime="20230726 14:10:35.806"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.807" endtime="20230726 14:10:35.807"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:35.806" endtime="20230726 14:10:35.807"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.808" endtime="20230726 14:10:35.808"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.809" endtime="20230726 14:10:35.809"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:35.807" endtime="20230726 14:10:35.809"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.810" endtime="20230726 14:10:35.810"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:35.809" endtime="20230726 14:10:35.810"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230726 14:10:35.811" endtime="20230726 14:10:35.813"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:35.811" endtime="20230726 14:10:35.813"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.814" endtime="20230726 14:10:35.814"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.814" endtime="20230726 14:10:35.814"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:35.813" endtime="20230726 14:10:35.815"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.815" endtime="20230726 14:10:35.815"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:35.815" endtime="20230726 14:10:35.815"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.816" endtime="20230726 14:10:35.816"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:35.815" endtime="20230726 14:10:35.816"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.817" endtime="20230726 14:10:35.817"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:35.816" endtime="20230726 14:10:35.817"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230726 14:10:35.817" endtime="20230726 14:10:35.818"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:35.817" endtime="20230726 14:10:35.818"/>
</branch>
<status status="PASS" starttime="20230726 14:10:35.803" endtime="20230726 14:10:35.819"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230726 14:10:35.820" level="INFO">Length is 10</msg>
<msg timestamp="20230726 14:10:35.820" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230726 14:10:35.819" endtime="20230726 14:10:35.820"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230726 14:10:35.821" level="INFO">${text} = Ari123456#</msg>
<status status="PASS" starttime="20230726 14:10:35.821" endtime="20230726 14:10:35.821"/>
</kw>
<status status="PASS" starttime="20230726 14:10:35.821" endtime="20230726 14:10:35.822"/>
</branch>
<status status="PASS" starttime="20230726 14:10:35.820" endtime="20230726 14:10:35.822"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230726 14:10:35.822" endtime="20230726 14:10:35.822"/>
</return>
<msg timestamp="20230726 14:10:35.822" level="INFO">${text} = Ari123456#</msg>
<status status="PASS" starttime="20230726 14:10:35.798" endtime="20230726 14:10:35.823"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230726 14:10:35.823" endtime="20230726 14:10:35.824"/>
</return>
<msg timestamp="20230726 14:10:35.826" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230726 14:10:35.823" endtime="20230726 14:10:35.827"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230726 14:10:35.827" endtime="20230726 14:10:35.894"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230726 14:10:35.896" level="INFO">Fills the text 'Ari123456#' in the given field.</msg>
<status status="PASS" starttime="20230726 14:10:35.895" endtime="20230726 14:10:35.965"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230726 14:10:35.966" level="INFO">Length is 10</msg>
<msg timestamp="20230726 14:10:35.966" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230726 14:10:35.965" endtime="20230726 14:10:35.966"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230726 14:10:35.968" level="INFO">${STATE["Mật khẩu"]} = Ari123456#</msg>
<status status="PASS" starttime="20230726 14:10:35.967" endtime="20230726 14:10:35.968"/>
</kw>
<status status="PASS" starttime="20230726 14:10:35.966" endtime="20230726 14:10:35.968"/>
</branch>
<status status="PASS" starttime="20230726 14:10:35.966" endtime="20230726 14:10:35.968"/>
</if>
<status status="PASS" starttime="20230726 14:10:35.797" endtime="20230726 14:10:35.968"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230726 14:10:35.969" endtime="20230726 14:10:36.121"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230726 14:10:36.122" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230726 14:10:36.122" endtime="20230726 14:10:36.123"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230726 14:10:36.125" level="WARN">Keyword 'Get Element Count' found both from a custom library 'Browser' and a standard library 'XML'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'Browser.Get Element Count' or 'XML.Get Element Count'.</msg>
<msg timestamp="20230726 14:10:36.154" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230726 14:10:36.127" endtime="20230726 14:10:36.154"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230726 14:10:36.155" endtime="20230726 14:10:36.155"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230726 14:10:36.155" endtime="20230726 14:10:36.155"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:36.154" endtime="20230726 14:10:36.155"/>
</branch>
<status status="PASS" starttime="20230726 14:10:36.154" endtime="20230726 14:10:36.155"/>
</if>
<status status="PASS" starttime="20230726 14:10:36.121" endtime="20230726 14:10:36.155"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230726 14:10:36.155" endtime="20230726 14:10:36.223"/>
</kw>
<status status="PASS" starttime="20230726 14:10:35.968" endtime="20230726 14:10:36.224"/>
</kw>
<kw name="User look message &quot;Đăng nhập thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230726 14:10:36.230" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230726 14:10:36.228" endtime="20230726 14:10:36.231"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230726 14:10:36.234" level="INFO">Length is 0</msg>
<msg timestamp="20230726 14:10:36.234" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230726 14:10:36.231" endtime="20230726 14:10:36.234"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230726 14:10:36.235" endtime="20230726 14:10:36.235"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:36.234" endtime="20230726 14:10:36.235"/>
</branch>
<status status="PASS" starttime="20230726 14:10:36.234" endtime="20230726 14:10:36.235"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230726 14:10:36.674" level="INFO">Text: 'Đăng nhập thành công'</msg>
<status status="PASS" starttime="20230726 14:10:36.237" endtime="20230726 14:10:36.676"/>
</kw>
<status status="PASS" starttime="20230726 14:10:36.236" endtime="20230726 14:10:36.678"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230726 14:10:36.682" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230726 14:10:36.679" endtime="20230726 14:10:36.683"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230726 14:10:37.092" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230726 14:10:37.094" level="INFO">See also file:///D:/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230726 14:10:37.095" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230726 14:10:36.685" endtime="20230726 14:10:37.108"/>
</kw>
<status status="FAIL" starttime="20230726 14:10:36.684" endtime="20230726 14:10:37.109"/>
</kw>
<msg timestamp="20230726 14:10:37.110" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230726 14:10:36.684" endtime="20230726 14:10:37.110"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230726 14:10:37.112" endtime="20230726 14:10:37.112"/>
</kw>
<status status="NOT RUN" starttime="20230726 14:10:37.111" endtime="20230726 14:10:37.112"/>
</branch>
<status status="PASS" starttime="20230726 14:10:37.110" endtime="20230726 14:10:37.112"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230726 14:10:37.113" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230726 14:10:37.113" endtime="20230726 14:10:37.113"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230726 14:10:37.114" level="WARN">Keyword 'Get Element Count' found both from a custom library 'Browser' and a standard library 'XML'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'Browser.Get Element Count' or 'XML.Get Element Count'.</msg>
<msg timestamp="20230726 14:10:37.142" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230726 14:10:37.115" endtime="20230726 14:10:37.145"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230726 14:10:40.160" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230726 14:10:37.152" endtime="20230726 14:10:40.161"/>
</kw>
<status status="PASS" starttime="20230726 14:10:37.147" endtime="20230726 14:10:40.161"/>
</kw>
<status status="PASS" starttime="20230726 14:10:37.146" endtime="20230726 14:10:40.161"/>
</branch>
<status status="PASS" starttime="20230726 14:10:37.146" endtime="20230726 14:10:40.162"/>
</if>
<status status="PASS" starttime="20230726 14:10:37.112" endtime="20230726 14:10:40.162"/>
</kw>
<status status="PASS" starttime="20230726 14:10:36.224" endtime="20230726 14:10:40.162"/>
</kw>
<status status="PASS" starttime="20230726 14:10:34.492" endtime="20230726 14:10:40.163"/>
</kw>
<kw name="When Click &quot;Quản lý doanh thu&quot; menu1" library="common" sourcename="Click &quot;${text}&quot; menu1">
<kw name="Click" library="Browser">
<arg>//li[contains(@class, "my-3") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230726 14:10:40.168" endtime="20230726 14:10:40.249"/>
</kw>
<status status="PASS" starttime="20230726 14:10:40.167" endtime="20230726 14:10:40.250"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>4</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230726 14:10:44.253" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20230726 14:10:40.251" endtime="20230726 14:10:44.254"/>
</kw>
<kw name="When Click &quot;Doanh thu CH&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "items-center") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230726 14:10:44.256" endtime="20230726 14:10:44.420"/>
</kw>
<status status="PASS" starttime="20230726 14:10:44.256" endtime="20230726 14:10:44.422"/>
</kw>
<kw name="When Check value table &quot;Trống&quot;" library="common" sourcename="Check value table &quot;${text}&quot;">
<kw name="Element Text Should Be" library="common">
<arg>//tbody/*[contains(@class, "ant-table-placeholder")]/*//*[contains(text(), "${text}")]</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230726 14:11:03.153" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230726 14:11:03.157" level="INFO">See also file:///D:/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230726 14:11:03.160" level="FAIL">Error: Could not find active page</msg>
<status status="FAIL" starttime="20230726 14:10:44.427" endtime="20230726 14:11:03.170"/>
</kw>
<status status="FAIL" starttime="20230726 14:10:44.425" endtime="20230726 14:11:03.172"/>
</kw>
<status status="FAIL" starttime="20230726 14:10:44.424" endtime="20230726 14:11:03.173"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230726 14:11:03.568" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230726 14:11:03.179" endtime="20230726 14:11:03.568"/>
</kw>
<status status="PASS" starttime="20230726 14:11:03.177" endtime="20230726 14:11:03.569"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="FAIL" starttime="20230726 14:10:32.418" endtime="20230726 14:11:03.569">Error: Could not find active page</status>
</test>
<status status="FAIL" starttime="20230726 14:10:30.418" endtime="20230726 14:11:03.582"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">@regression</stat>
<stat pass="0" fail="1" skip="0">@smoketest</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Revenue">Revenue</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230726 14:10:36.125" level="WARN">Keyword 'Get Element Count' found both from a custom library 'Browser' and a standard library 'XML'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'Browser.Get Element Count' or 'XML.Get Element Count'.</msg>
<msg timestamp="20230726 14:10:37.114" level="WARN">Keyword 'Get Element Count' found both from a custom library 'Browser' and a standard library 'XML'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'Browser.Get Element Count' or 'XML.Get Element Count'.</msg>
<msg timestamp="20230726 14:11:03.153" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
</errors>
</robot>
