<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230717 10:48:43.651" rpa="false" schemaversion="4">
<suite id="s1" name="SignIn" source="D:\Documents\GitHub\vite-react\test\testcases\SignIn.robot">
<test id="s1-t1" name="LG-07 Verify if your keyboard's 'Enter' key navigates to the next button" line="9">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:48:45.470" endtime="20230717 10:48:45.477"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:48:45.479" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\362994e0-0006-437a-9a1a-ad3a9ed05247"}</msg>
<msg timestamp="20230717 10:48:46.543" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\362994e0-0006-437a-9a1a-ad3a9ed05247"}</msg>
<status status="PASS" starttime="20230717 10:48:45.478" endtime="20230717 10:48:46.543"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:48:49.445" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:48:49.445" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:48:46.543" endtime="20230717 10:48:49.445"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:48:49.446" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:48:49.445" endtime="20230717 10:48:49.446"/>
</kw>
<status status="PASS" starttime="20230717 10:48:45.469" endtime="20230717 10:48:49.446"/>
</kw>
<kw name="When Enter to login">
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hoangdieu181021@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:49.450" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:48:49.450" endtime="20230717 10:48:49.450"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:49.451" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:48:49.451" endtime="20230717 10:48:49.451"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:48:49.452" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:48:49.452" endtime="20230717 10:48:49.453"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:49.454" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:48:49.454" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:48:49.453" endtime="20230717 10:48:49.454"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:48:49.454" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:48:49.454" endtime="20230717 10:48:49.454"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:49.455" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:48:49.455" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:48:49.455" endtime="20230717 10:48:49.455"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.456" endtime="20230717 10:48:49.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.456" endtime="20230717 10:48:49.456"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:49.455" endtime="20230717 10:48:49.457"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.457" endtime="20230717 10:48:49.457"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.457" endtime="20230717 10:48:49.457"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.457" endtime="20230717 10:48:49.457"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:49.457" endtime="20230717 10:48:49.458"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.458" endtime="20230717 10:48:49.458"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.459" endtime="20230717 10:48:49.459"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:49.458" endtime="20230717 10:48:49.459"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.459" endtime="20230717 10:48:49.459"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.460" endtime="20230717 10:48:49.460"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:49.459" endtime="20230717 10:48:49.460"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.461" endtime="20230717 10:48:49.461"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:49.460" endtime="20230717 10:48:49.462"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:48:49.462" endtime="20230717 10:48:49.462"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:49.462" endtime="20230717 10:48:49.463"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.463" endtime="20230717 10:48:49.463"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.464" endtime="20230717 10:48:49.464"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:49.463" endtime="20230717 10:48:49.465"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.465" endtime="20230717 10:48:49.465"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:49.465" endtime="20230717 10:48:49.465"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.466" endtime="20230717 10:48:49.466"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:49.465" endtime="20230717 10:48:49.466"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.466" endtime="20230717 10:48:49.466"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:49.466" endtime="20230717 10:48:49.466"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:49.467" endtime="20230717 10:48:49.467"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:49.466" endtime="20230717 10:48:49.467"/>
</branch>
<status status="PASS" starttime="20230717 10:48:49.455" endtime="20230717 10:48:49.467"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:49.468" level="INFO">Length is 25</msg>
<msg timestamp="20230717 10:48:49.468" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230717 10:48:49.468" endtime="20230717 10:48:49.468"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:48:49.472" level="INFO">${text} = hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:48:49.471" endtime="20230717 10:48:49.472"/>
</kw>
<status status="PASS" starttime="20230717 10:48:49.469" endtime="20230717 10:48:49.472"/>
</branch>
<status status="PASS" starttime="20230717 10:48:49.469" endtime="20230717 10:48:49.472"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:48:49.472" endtime="20230717 10:48:49.472"/>
</return>
<msg timestamp="20230717 10:48:49.473" level="INFO">${text} = hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:48:49.449" endtime="20230717 10:48:49.473"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:48:49.473" endtime="20230717 10:48:49.473"/>
</return>
<msg timestamp="20230717 10:48:49.474" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:48:49.473" endtime="20230717 10:48:49.474"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:48:49.474" endtime="20230717 10:48:50.976"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:48:50.977" level="INFO">Fills the text 'hoangdieu181021@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230717 10:48:50.977" endtime="20230717 10:48:51.019"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:51.019" level="INFO">Length is 25</msg>
<msg timestamp="20230717 10:48:51.019" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230717 10:48:51.019" endtime="20230717 10:48:51.019"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:48:51.021" level="INFO">${STATE["Tên đăng nhập"]} = hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:48:51.020" endtime="20230717 10:48:51.021"/>
</kw>
<status status="PASS" starttime="20230717 10:48:51.020" endtime="20230717 10:48:51.021"/>
</branch>
<status status="PASS" starttime="20230717 10:48:51.019" endtime="20230717 10:48:51.021"/>
</if>
<status status="PASS" starttime="20230717 10:48:49.448" endtime="20230717 10:48:51.021"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Na115689.&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:51.023" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:48:51.023" endtime="20230717 10:48:51.023"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:51.024" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:48:51.024" endtime="20230717 10:48:51.024"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:48:51.024" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:48:51.024" endtime="20230717 10:48:51.024"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:51.025" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:48:51.025" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:48:51.025" endtime="20230717 10:48:51.025"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:48:51.025" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:48:51.025" endtime="20230717 10:48:51.025"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:51.025" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:48:51.026" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:48:51.025" endtime="20230717 10:48:51.026"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.026" endtime="20230717 10:48:51.026"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.026" endtime="20230717 10:48:51.026"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.026" endtime="20230717 10:48:51.026"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.027" endtime="20230717 10:48:51.027"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.027" endtime="20230717 10:48:51.027"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.027" endtime="20230717 10:48:51.027"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.026" endtime="20230717 10:48:51.027"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.027" endtime="20230717 10:48:51.028"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.028" endtime="20230717 10:48:51.028"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.027" endtime="20230717 10:48:51.028"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.028" endtime="20230717 10:48:51.028"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.028" endtime="20230717 10:48:51.028"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.028" endtime="20230717 10:48:51.028"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.029" endtime="20230717 10:48:51.029"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.028" endtime="20230717 10:48:51.029"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:48:51.029" endtime="20230717 10:48:51.029"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.029" endtime="20230717 10:48:51.029"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.029" endtime="20230717 10:48:51.029"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.030" endtime="20230717 10:48:51.030"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.029" endtime="20230717 10:48:51.030"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.030" endtime="20230717 10:48:51.030"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.030" endtime="20230717 10:48:51.030"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.031" endtime="20230717 10:48:51.031"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.030" endtime="20230717 10:48:51.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.031" endtime="20230717 10:48:51.031"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.031" endtime="20230717 10:48:51.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.031" endtime="20230717 10:48:51.031"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.031" endtime="20230717 10:48:51.032"/>
</branch>
<status status="PASS" starttime="20230717 10:48:51.026" endtime="20230717 10:48:51.032"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:51.032" level="INFO">Length is 9</msg>
<msg timestamp="20230717 10:48:51.032" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20230717 10:48:51.032" endtime="20230717 10:48:51.032"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:48:51.033" level="INFO">${text} = Na115689.</msg>
<status status="PASS" starttime="20230717 10:48:51.033" endtime="20230717 10:48:51.033"/>
</kw>
<status status="PASS" starttime="20230717 10:48:51.032" endtime="20230717 10:48:51.033"/>
</branch>
<status status="PASS" starttime="20230717 10:48:51.032" endtime="20230717 10:48:51.033"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:48:51.033" endtime="20230717 10:48:51.033"/>
</return>
<msg timestamp="20230717 10:48:51.033" level="INFO">${text} = Na115689.</msg>
<status status="PASS" starttime="20230717 10:48:51.022" endtime="20230717 10:48:51.033"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:48:51.034" endtime="20230717 10:48:51.034"/>
</return>
<msg timestamp="20230717 10:48:51.034" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:48:51.033" endtime="20230717 10:48:51.034"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:48:51.034" endtime="20230717 10:48:51.077"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:48:51.078" level="INFO">Fills the text 'Na115689.' in the given field.</msg>
<status status="PASS" starttime="20230717 10:48:51.077" endtime="20230717 10:48:51.114"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:51.115" level="INFO">Length is 9</msg>
<msg timestamp="20230717 10:48:51.115" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20230717 10:48:51.114" endtime="20230717 10:48:51.115"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:48:51.116" level="INFO">${STATE["Mật khẩu"]} = Na115689.</msg>
<status status="PASS" starttime="20230717 10:48:51.115" endtime="20230717 10:48:51.116"/>
</kw>
<status status="PASS" starttime="20230717 10:48:51.115" endtime="20230717 10:48:51.116"/>
</branch>
<status status="PASS" starttime="20230717 10:48:51.115" endtime="20230717 10:48:51.116"/>
</if>
<status status="PASS" starttime="20230717 10:48:51.022" endtime="20230717 10:48:51.116"/>
</kw>
<kw name="When Enter to &quot;Mật khẩu&quot; Login" library="common" sourcename="Enter to &quot;${name}&quot; Login">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:48:51.117" endtime="20230717 10:48:51.117"/>
</return>
<msg timestamp="20230717 10:48:51.117" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:48:51.117" endtime="20230717 10:48:51.117"/>
</kw>
<kw name="Press Keys" library="Browser">
<arg>${element}</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given key combination into element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:48:51.118" endtime="20230717 10:48:51.191"/>
</kw>
<status status="PASS" starttime="20230717 10:48:51.116" endtime="20230717 10:48:51.191"/>
</kw>
<kw name="When User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:48:51.193" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:48:51.192" endtime="20230717 10:48:51.193"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:51.193" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:48:51.193" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:48:51.193" endtime="20230717 10:48:51.193"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230717 10:48:51.194" endtime="20230717 10:48:51.194"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:51.194" endtime="20230717 10:48:51.194"/>
</branch>
<status status="PASS" starttime="20230717 10:48:51.193" endtime="20230717 10:48:51.194"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:48:52.561" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230717 10:48:51.195" endtime="20230717 10:48:52.561"/>
</kw>
<status status="PASS" starttime="20230717 10:48:51.194" endtime="20230717 10:48:52.561"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:52.562" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230717 10:48:52.562" endtime="20230717 10:48:52.562"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:48:52.858" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230717 10:48:52.858" level="INFO">See also file:///D:/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230717 10:48:52.859" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230717 10:48:52.564" endtime="20230717 10:48:52.866"/>
</kw>
<status status="FAIL" starttime="20230717 10:48:52.563" endtime="20230717 10:48:52.867"/>
</kw>
<msg timestamp="20230717 10:48:52.867" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230717 10:48:52.562" endtime="20230717 10:48:52.867"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:48:52.868" endtime="20230717 10:48:52.868"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:52.867" endtime="20230717 10:48:52.868"/>
</branch>
<status status="PASS" starttime="20230717 10:48:52.867" endtime="20230717 10:48:52.868"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:52.869" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230717 10:48:52.869" endtime="20230717 10:48:52.869"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:48:52.891" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230717 10:48:52.869" endtime="20230717 10:48:52.891"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:48:53.710" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230717 10:48:52.892" endtime="20230717 10:48:53.710"/>
</kw>
<status status="PASS" starttime="20230717 10:48:52.891" endtime="20230717 10:48:53.710"/>
</kw>
<status status="PASS" starttime="20230717 10:48:52.891" endtime="20230717 10:48:53.711"/>
</branch>
<status status="PASS" starttime="20230717 10:48:52.891" endtime="20230717 10:48:53.711"/>
</if>
<status status="PASS" starttime="20230717 10:48:52.868" endtime="20230717 10:48:53.711"/>
</kw>
<status status="PASS" starttime="20230717 10:48:51.192" endtime="20230717 10:48:53.711"/>
</kw>
<status status="PASS" starttime="20230717 10:48:49.447" endtime="20230717 10:48:53.711"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:48:53.797" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:48:53.714" endtime="20230717 10:48:53.797"/>
</kw>
<status status="PASS" starttime="20230717 10:48:53.714" endtime="20230717 10:48:53.797"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:48:45.461" endtime="20230717 10:48:53.798"/>
</test>
<test id="s1-t2" name="LG-13 Verify that the logout link is redirected to login/home page" line="13">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:48:53.814" endtime="20230717 10:48:53.814"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:48:53.815" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\7964196f-e9b9-41ac-83ff-3f15b1be31a1"}</msg>
<msg timestamp="20230717 10:48:54.368" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\7964196f-e9b9-41ac-83ff-3f15b1be31a1"}</msg>
<status status="PASS" starttime="20230717 10:48:53.814" endtime="20230717 10:48:54.368"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:48:54.972" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:48:54.972" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:48:54.368" endtime="20230717 10:48:54.973"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:48:54.973" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:48:54.973" endtime="20230717 10:48:54.973"/>
</kw>
<status status="PASS" starttime="20230717 10:48:53.813" endtime="20230717 10:48:54.973"/>
</kw>
<kw name="When Click to login">
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hoangdieu181021@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:54.977" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:48:54.976" endtime="20230717 10:48:54.977"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:54.977" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:48:54.977" endtime="20230717 10:48:54.977"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:48:54.978" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:48:54.978" endtime="20230717 10:48:54.978"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:54.978" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:48:54.978" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:48:54.978" endtime="20230717 10:48:54.978"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:48:54.979" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:48:54.978" endtime="20230717 10:48:54.979"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:54.979" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:48:54.979" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:48:54.979" endtime="20230717 10:48:54.979"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.979" endtime="20230717 10:48:54.979"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.979" endtime="20230717 10:48:54.979"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:54.979" endtime="20230717 10:48:54.979"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.980" endtime="20230717 10:48:54.980"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.980" endtime="20230717 10:48:54.980"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.980" endtime="20230717 10:48:54.980"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:54.979" endtime="20230717 10:48:54.980"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.980" endtime="20230717 10:48:54.980"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.980" endtime="20230717 10:48:54.981"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:54.980" endtime="20230717 10:48:54.981"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.981" endtime="20230717 10:48:54.981"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.981" endtime="20230717 10:48:54.981"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:54.981" endtime="20230717 10:48:54.981"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.982" endtime="20230717 10:48:54.982"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:54.981" endtime="20230717 10:48:54.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:48:54.982" endtime="20230717 10:48:54.982"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:54.982" endtime="20230717 10:48:54.983"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.984" endtime="20230717 10:48:54.984"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.984" endtime="20230717 10:48:54.984"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:54.983" endtime="20230717 10:48:54.984"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.985" endtime="20230717 10:48:54.985"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:54.985" endtime="20230717 10:48:54.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.986" endtime="20230717 10:48:54.986"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:54.986" endtime="20230717 10:48:54.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.987" endtime="20230717 10:48:54.987"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:54.986" endtime="20230717 10:48:54.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:54.989" endtime="20230717 10:48:54.989"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:54.988" endtime="20230717 10:48:54.989"/>
</branch>
<status status="PASS" starttime="20230717 10:48:54.979" endtime="20230717 10:48:54.989"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:54.990" level="INFO">Length is 25</msg>
<msg timestamp="20230717 10:48:54.990" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230717 10:48:54.989" endtime="20230717 10:48:54.990"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:48:54.991" level="INFO">${text} = hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:48:54.990" endtime="20230717 10:48:54.991"/>
</kw>
<status status="PASS" starttime="20230717 10:48:54.990" endtime="20230717 10:48:54.991"/>
</branch>
<status status="PASS" starttime="20230717 10:48:54.990" endtime="20230717 10:48:54.991"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:48:54.991" endtime="20230717 10:48:54.991"/>
</return>
<msg timestamp="20230717 10:48:54.991" level="INFO">${text} = hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:48:54.975" endtime="20230717 10:48:54.991"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:48:54.992" endtime="20230717 10:48:54.992"/>
</return>
<msg timestamp="20230717 10:48:54.992" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:48:54.991" endtime="20230717 10:48:54.993"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:48:54.993" endtime="20230717 10:48:56.012"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:48:56.013" level="INFO">Fills the text 'hoangdieu181021@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230717 10:48:56.013" endtime="20230717 10:48:56.050"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:56.050" level="INFO">Length is 25</msg>
<msg timestamp="20230717 10:48:56.050" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230717 10:48:56.050" endtime="20230717 10:48:56.050"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:48:56.052" level="INFO">${STATE["Tên đăng nhập"]} = hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:48:56.051" endtime="20230717 10:48:56.052"/>
</kw>
<status status="PASS" starttime="20230717 10:48:56.051" endtime="20230717 10:48:56.052"/>
</branch>
<status status="PASS" starttime="20230717 10:48:56.050" endtime="20230717 10:48:56.052"/>
</if>
<status status="PASS" starttime="20230717 10:48:54.975" endtime="20230717 10:48:56.052"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Na115689.&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:56.053" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:48:56.053" endtime="20230717 10:48:56.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:56.053" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:48:56.053" endtime="20230717 10:48:56.053"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:48:56.054" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:48:56.054" endtime="20230717 10:48:56.054"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:56.054" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:48:56.054" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:48:56.054" endtime="20230717 10:48:56.054"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:48:56.055" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:48:56.054" endtime="20230717 10:48:56.055"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:56.055" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:48:56.055" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:48:56.055" endtime="20230717 10:48:56.055"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.056" endtime="20230717 10:48:56.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.056" endtime="20230717 10:48:56.056"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.055" endtime="20230717 10:48:56.056"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.056" endtime="20230717 10:48:56.056"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.057" endtime="20230717 10:48:56.057"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.057" endtime="20230717 10:48:56.057"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.056" endtime="20230717 10:48:56.057"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.057" endtime="20230717 10:48:56.057"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.057" endtime="20230717 10:48:56.057"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.057" endtime="20230717 10:48:56.057"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.058" endtime="20230717 10:48:56.058"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.058" endtime="20230717 10:48:56.058"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.057" endtime="20230717 10:48:56.058"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.058" endtime="20230717 10:48:56.058"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.058" endtime="20230717 10:48:56.058"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:48:56.058" endtime="20230717 10:48:56.058"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.058" endtime="20230717 10:48:56.058"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.059" endtime="20230717 10:48:56.059"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.059" endtime="20230717 10:48:56.059"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.058" endtime="20230717 10:48:56.059"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.059" endtime="20230717 10:48:56.059"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.059" endtime="20230717 10:48:56.059"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.059" endtime="20230717 10:48:56.059"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.059" endtime="20230717 10:48:56.059"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.060" endtime="20230717 10:48:56.060"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.059" endtime="20230717 10:48:56.060"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.060" endtime="20230717 10:48:56.060"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.060" endtime="20230717 10:48:56.060"/>
</branch>
<status status="PASS" starttime="20230717 10:48:56.055" endtime="20230717 10:48:56.060"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:56.061" level="INFO">Length is 9</msg>
<msg timestamp="20230717 10:48:56.061" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20230717 10:48:56.060" endtime="20230717 10:48:56.061"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:48:56.061" level="INFO">${text} = Na115689.</msg>
<status status="PASS" starttime="20230717 10:48:56.061" endtime="20230717 10:48:56.061"/>
</kw>
<status status="PASS" starttime="20230717 10:48:56.061" endtime="20230717 10:48:56.061"/>
</branch>
<status status="PASS" starttime="20230717 10:48:56.061" endtime="20230717 10:48:56.061"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:48:56.061" endtime="20230717 10:48:56.061"/>
</return>
<msg timestamp="20230717 10:48:56.061" level="INFO">${text} = Na115689.</msg>
<status status="PASS" starttime="20230717 10:48:56.052" endtime="20230717 10:48:56.061"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:48:56.062" endtime="20230717 10:48:56.062"/>
</return>
<msg timestamp="20230717 10:48:56.062" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:48:56.061" endtime="20230717 10:48:56.062"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:48:56.062" endtime="20230717 10:48:56.102"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:48:56.103" level="INFO">Fills the text 'Na115689.' in the given field.</msg>
<status status="PASS" starttime="20230717 10:48:56.102" endtime="20230717 10:48:56.134"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:56.135" level="INFO">Length is 9</msg>
<msg timestamp="20230717 10:48:56.135" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20230717 10:48:56.134" endtime="20230717 10:48:56.135"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:48:56.135" level="INFO">${STATE["Mật khẩu"]} = Na115689.</msg>
<status status="PASS" starttime="20230717 10:48:56.135" endtime="20230717 10:48:56.135"/>
</kw>
<status status="PASS" starttime="20230717 10:48:56.135" endtime="20230717 10:48:56.136"/>
</branch>
<status status="PASS" starttime="20230717 10:48:56.135" endtime="20230717 10:48:56.136"/>
</if>
<status status="PASS" starttime="20230717 10:48:56.052" endtime="20230717 10:48:56.136"/>
</kw>
<kw name="When Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:48:56.137" endtime="20230717 10:48:56.303"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:56.304" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230717 10:48:56.303" endtime="20230717 10:48:56.304"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:48:56.311" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:48:56.304" endtime="20230717 10:48:56.311"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.311" endtime="20230717 10:48:56.311"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.311" endtime="20230717 10:48:56.311"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.311" endtime="20230717 10:48:56.311"/>
</branch>
<status status="PASS" starttime="20230717 10:48:56.311" endtime="20230717 10:48:56.311"/>
</if>
<status status="PASS" starttime="20230717 10:48:56.303" endtime="20230717 10:48:56.311"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230717 10:48:56.311" endtime="20230717 10:48:56.341"/>
</kw>
<status status="PASS" starttime="20230717 10:48:56.136" endtime="20230717 10:48:56.341"/>
</kw>
<kw name="When User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:48:56.342" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:48:56.341" endtime="20230717 10:48:56.342"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:48:56.342" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:48:56.342" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:48:56.342" endtime="20230717 10:48:56.342"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230717 10:48:56.342" endtime="20230717 10:48:56.342"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:56.342" endtime="20230717 10:48:56.342"/>
</branch>
<status status="PASS" starttime="20230717 10:48:56.342" endtime="20230717 10:48:56.343"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:48:57.678" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230717 10:48:56.343" endtime="20230717 10:48:57.679"/>
</kw>
<status status="PASS" starttime="20230717 10:48:56.343" endtime="20230717 10:48:57.679"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:57.679" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230717 10:48:57.679" endtime="20230717 10:48:57.679"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:48:57.985" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230717 10:48:57.985" level="INFO">See also file:///D:/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230717 10:48:57.985" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230717 10:48:57.680" endtime="20230717 10:48:57.987"/>
</kw>
<status status="FAIL" starttime="20230717 10:48:57.680" endtime="20230717 10:48:57.987"/>
</kw>
<msg timestamp="20230717 10:48:57.988" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230717 10:48:57.679" endtime="20230717 10:48:57.988"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:48:57.988" endtime="20230717 10:48:57.988"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:48:57.988" endtime="20230717 10:48:57.988"/>
</branch>
<status status="PASS" starttime="20230717 10:48:57.988" endtime="20230717 10:48:57.988"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:48:57.990" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230717 10:48:57.989" endtime="20230717 10:48:57.990"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:48:58.009" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230717 10:48:57.990" endtime="20230717 10:48:58.009"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:48:58.826" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230717 10:48:58.010" endtime="20230717 10:48:58.827"/>
</kw>
<status status="PASS" starttime="20230717 10:48:58.009" endtime="20230717 10:48:58.827"/>
</kw>
<status status="PASS" starttime="20230717 10:48:58.009" endtime="20230717 10:48:58.827"/>
</branch>
<status status="PASS" starttime="20230717 10:48:58.009" endtime="20230717 10:48:58.827"/>
</if>
<status status="PASS" starttime="20230717 10:48:57.989" endtime="20230717 10:48:58.827"/>
</kw>
<status status="PASS" starttime="20230717 10:48:56.341" endtime="20230717 10:48:58.828"/>
</kw>
<status status="PASS" starttime="20230717 10:48:54.974" endtime="20230717 10:48:58.828"/>
</kw>
<kw name="When Hover account icon &quot;/assets/images/avatar.jpeg&quot;" library="common" sourcename="Hover account icon &quot;${url}&quot;">
<kw name="Hover" library="Browser">
<arg>//img[contains(@src, "${url}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Moves the virtual mouse and scrolls to the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:48:58.831" endtime="20230717 10:49:00.974"/>
</kw>
<status status="PASS" starttime="20230717 10:48:58.830" endtime="20230717 10:49:00.974"/>
</kw>
<kw name="When Click span &quot;Đăng xuất&quot;" library="common" sourcename="Click span &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>xpath=//span[contains(@class, "ant-dropdown-menu-title-content")]/div[contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:00.978" endtime="20230717 10:49:01.552"/>
</kw>
<status status="PASS" starttime="20230717 10:49:00.976" endtime="20230717 10:49:01.552"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230717 10:49:04.554" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20230717 10:49:01.553" endtime="20230717 10:49:04.554"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:49:04.622" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:49:04.557" endtime="20230717 10:49:04.622"/>
</kw>
<status status="PASS" starttime="20230717 10:49:04.556" endtime="20230717 10:49:04.622"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:48:53.806" endtime="20230717 10:49:04.623"/>
</test>
<test id="s1-t3" name="LG-14 Verify if a user cannot login with a incorrect/non-exist email and an correct password." line="20">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:49:04.635" endtime="20230717 10:49:04.636"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:49:04.636" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\3cba5ee1-d3d4-4914-998a-cdfd0034d93c"}</msg>
<msg timestamp="20230717 10:49:05.032" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\3cba5ee1-d3d4-4914-998a-cdfd0034d93c"}</msg>
<status status="PASS" starttime="20230717 10:49:04.636" endtime="20230717 10:49:05.032"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:49:05.611" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:49:05.611" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:49:05.033" endtime="20230717 10:49:05.612"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:49:05.612" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:49:05.612" endtime="20230717 10:49:05.613"/>
</kw>
<status status="PASS" starttime="20230717 10:49:04.634" endtime="20230717 10:49:05.613"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;admin12121@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:05.615" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:05.615" endtime="20230717 10:49:05.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:05.615" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:05.615" endtime="20230717 10:49:05.615"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:05.616" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:05.615" endtime="20230717 10:49:05.616"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:05.616" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:05.616" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:05.616" endtime="20230717 10:49:05.616"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:05.617" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:05.617" endtime="20230717 10:49:05.617"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:05.617" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:05.617" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:05.617" endtime="20230717 10:49:05.617"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.618" endtime="20230717 10:49:05.618"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.619" endtime="20230717 10:49:05.619"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:05.618" endtime="20230717 10:49:05.619"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.619" endtime="20230717 10:49:05.619"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.619" endtime="20230717 10:49:05.619"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.619" endtime="20230717 10:49:05.619"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:05.619" endtime="20230717 10:49:05.620"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.620" endtime="20230717 10:49:05.620"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.620" endtime="20230717 10:49:05.620"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:05.620" endtime="20230717 10:49:05.620"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.621" endtime="20230717 10:49:05.621"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.621" endtime="20230717 10:49:05.621"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:05.620" endtime="20230717 10:49:05.621"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.622" endtime="20230717 10:49:05.622"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:05.621" endtime="20230717 10:49:05.622"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:05.623" endtime="20230717 10:49:05.623"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:05.622" endtime="20230717 10:49:05.624"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.624" endtime="20230717 10:49:05.624"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.625" endtime="20230717 10:49:05.626"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:05.624" endtime="20230717 10:49:05.626"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.627" endtime="20230717 10:49:05.627"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:05.626" endtime="20230717 10:49:05.628"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.628" endtime="20230717 10:49:05.629"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:05.628" endtime="20230717 10:49:05.629"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.630" endtime="20230717 10:49:05.630"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:05.629" endtime="20230717 10:49:05.630"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:05.630" endtime="20230717 10:49:05.630"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:05.630" endtime="20230717 10:49:05.630"/>
</branch>
<status status="PASS" starttime="20230717 10:49:05.618" endtime="20230717 10:49:05.630"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:05.631" level="INFO">Length is 20</msg>
<msg timestamp="20230717 10:49:05.631" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20230717 10:49:05.630" endtime="20230717 10:49:05.631"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:05.632" level="INFO">${text} = admin12121@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:05.631" endtime="20230717 10:49:05.632"/>
</kw>
<status status="PASS" starttime="20230717 10:49:05.631" endtime="20230717 10:49:05.632"/>
</branch>
<status status="PASS" starttime="20230717 10:49:05.631" endtime="20230717 10:49:05.632"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:05.632" endtime="20230717 10:49:05.632"/>
</return>
<msg timestamp="20230717 10:49:05.632" level="INFO">${text} = admin12121@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:05.614" endtime="20230717 10:49:05.632"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:05.633" endtime="20230717 10:49:05.633"/>
</return>
<msg timestamp="20230717 10:49:05.633" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:05.633" endtime="20230717 10:49:05.633"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:05.633" endtime="20230717 10:49:06.733"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:06.734" level="INFO">Fills the text 'admin12121@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:06.733" endtime="20230717 10:49:06.770"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:06.771" level="INFO">Length is 20</msg>
<msg timestamp="20230717 10:49:06.771" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20230717 10:49:06.771" endtime="20230717 10:49:06.771"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:06.772" level="INFO">${STATE["Tên đăng nhập"]} = admin12121@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:06.772" endtime="20230717 10:49:06.772"/>
</kw>
<status status="PASS" starttime="20230717 10:49:06.771" endtime="20230717 10:49:06.772"/>
</branch>
<status status="PASS" starttime="20230717 10:49:06.771" endtime="20230717 10:49:06.772"/>
</if>
<status status="PASS" starttime="20230717 10:49:05.614" endtime="20230717 10:49:06.772"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Password1!&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:06.775" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:06.775" endtime="20230717 10:49:06.775"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:06.775" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:06.775" endtime="20230717 10:49:06.775"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:06.775" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:06.775" endtime="20230717 10:49:06.775"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:06.776" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:06.776" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:06.775" endtime="20230717 10:49:06.776"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:06.776" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:06.776" endtime="20230717 10:49:06.776"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:06.776" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:06.776" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:06.776" endtime="20230717 10:49:06.776"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.777" endtime="20230717 10:49:06.777"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.777" endtime="20230717 10:49:06.777"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:06.776" endtime="20230717 10:49:06.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.777" endtime="20230717 10:49:06.777"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.778" endtime="20230717 10:49:06.778"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.778" endtime="20230717 10:49:06.778"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:06.777" endtime="20230717 10:49:06.778"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.778" endtime="20230717 10:49:06.778"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.778" endtime="20230717 10:49:06.778"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:06.778" endtime="20230717 10:49:06.778"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.778" endtime="20230717 10:49:06.779"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.779" endtime="20230717 10:49:06.779"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:06.778" endtime="20230717 10:49:06.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.779" endtime="20230717 10:49:06.779"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:06.779" endtime="20230717 10:49:06.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:06.779" endtime="20230717 10:49:06.779"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:06.779" endtime="20230717 10:49:06.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.779" endtime="20230717 10:49:06.779"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.780" endtime="20230717 10:49:06.780"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:06.779" endtime="20230717 10:49:06.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.780" endtime="20230717 10:49:06.780"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:06.780" endtime="20230717 10:49:06.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.780" endtime="20230717 10:49:06.780"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:06.780" endtime="20230717 10:49:06.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.781" endtime="20230717 10:49:06.781"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:06.780" endtime="20230717 10:49:06.781"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:06.781" endtime="20230717 10:49:06.781"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:06.781" endtime="20230717 10:49:06.781"/>
</branch>
<status status="PASS" starttime="20230717 10:49:06.776" endtime="20230717 10:49:06.781"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:06.782" level="INFO">Length is 10</msg>
<msg timestamp="20230717 10:49:06.783" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230717 10:49:06.782" endtime="20230717 10:49:06.783"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:06.783" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230717 10:49:06.783" endtime="20230717 10:49:06.783"/>
</kw>
<status status="PASS" starttime="20230717 10:49:06.783" endtime="20230717 10:49:06.783"/>
</branch>
<status status="PASS" starttime="20230717 10:49:06.783" endtime="20230717 10:49:06.783"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:06.784" endtime="20230717 10:49:06.784"/>
</return>
<msg timestamp="20230717 10:49:06.784" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230717 10:49:06.774" endtime="20230717 10:49:06.784"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:06.785" endtime="20230717 10:49:06.785"/>
</return>
<msg timestamp="20230717 10:49:06.785" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:06.784" endtime="20230717 10:49:06.785"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:06.785" endtime="20230717 10:49:06.837"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:06.838" level="INFO">Fills the text 'Password1!' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:06.838" endtime="20230717 10:49:06.862"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:06.863" level="INFO">Length is 10</msg>
<msg timestamp="20230717 10:49:06.863" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230717 10:49:06.863" endtime="20230717 10:49:06.863"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:06.864" level="INFO">${STATE["Mật khẩu"]} = Password1!</msg>
<status status="PASS" starttime="20230717 10:49:06.864" endtime="20230717 10:49:06.864"/>
</kw>
<status status="PASS" starttime="20230717 10:49:06.863" endtime="20230717 10:49:06.864"/>
</branch>
<status status="PASS" starttime="20230717 10:49:06.863" endtime="20230717 10:49:06.864"/>
</if>
<status status="PASS" starttime="20230717 10:49:06.774" endtime="20230717 10:49:06.864"/>
</kw>
<kw name="When Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:06.866" endtime="20230717 10:49:07.008"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:07.009" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230717 10:49:07.009" endtime="20230717 10:49:07.009"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:07.015" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:07.009" endtime="20230717 10:49:07.015"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:07.016" endtime="20230717 10:49:07.016"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230717 10:49:07.016" endtime="20230717 10:49:07.016"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:07.015" endtime="20230717 10:49:07.016"/>
</branch>
<status status="PASS" starttime="20230717 10:49:07.015" endtime="20230717 10:49:07.016"/>
</if>
<status status="PASS" starttime="20230717 10:49:07.009" endtime="20230717 10:49:07.016"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230717 10:49:07.016" endtime="20230717 10:49:07.052"/>
</kw>
<status status="PASS" starttime="20230717 10:49:06.865" endtime="20230717 10:49:07.052"/>
</kw>
<kw name="When User look message &quot;Người dùng admin12121@admin.com không tồn tại!&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:07.055" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:07.054" endtime="20230717 10:49:07.055"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:07.055" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:07.055" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:07.055" endtime="20230717 10:49:07.055"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:07.056" endtime="20230717 10:49:07.056"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:07.056" endtime="20230717 10:49:07.056"/>
</branch>
<status status="PASS" starttime="20230717 10:49:07.056" endtime="20230717 10:49:07.056"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:49:08.427" level="INFO">Text: 'Người dùng admin12121@admin.com không tồn tại!'</msg>
<status status="PASS" starttime="20230717 10:49:07.057" endtime="20230717 10:49:08.427"/>
</kw>
<status status="PASS" starttime="20230717 10:49:07.056" endtime="20230717 10:49:08.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:08.427" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230717 10:49:08.427" endtime="20230717 10:49:08.427"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:49:08.751" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230717 10:49:08.751" level="INFO">See also file:///D:/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230717 10:49:08.751" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230717 10:49:08.428" endtime="20230717 10:49:08.753"/>
</kw>
<status status="FAIL" starttime="20230717 10:49:08.428" endtime="20230717 10:49:08.754"/>
</kw>
<msg timestamp="20230717 10:49:08.754" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230717 10:49:08.427" endtime="20230717 10:49:08.754"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:08.755" endtime="20230717 10:49:08.755"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:08.754" endtime="20230717 10:49:08.755"/>
</branch>
<status status="PASS" starttime="20230717 10:49:08.754" endtime="20230717 10:49:08.755"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:08.756" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230717 10:49:08.756" endtime="20230717 10:49:08.756"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:08.766" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:08.756" endtime="20230717 10:49:08.766"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230717 10:49:08.767" endtime="20230717 10:49:08.767"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:08.766" endtime="20230717 10:49:08.767"/>
</branch>
<status status="PASS" starttime="20230717 10:49:08.766" endtime="20230717 10:49:08.767"/>
</if>
<status status="PASS" starttime="20230717 10:49:08.755" endtime="20230717 10:49:08.767"/>
</kw>
<status status="PASS" starttime="20230717 10:49:07.054" endtime="20230717 10:49:08.767"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:49:08.822" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:49:08.768" endtime="20230717 10:49:08.822"/>
</kw>
<status status="PASS" starttime="20230717 10:49:08.768" endtime="20230717 10:49:08.822"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:49:04.630" endtime="20230717 10:49:08.824"/>
</test>
<test id="s1-t4" name="LG-15 Verify if a user cannot login with a incorrect/non-exist email and an correct password." line="27">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:49:08.835" endtime="20230717 10:49:08.835"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:49:08.836" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\246fa016-99f5-4275-b104-a2bcd6c4c26b"}</msg>
<msg timestamp="20230717 10:49:09.233" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\246fa016-99f5-4275-b104-a2bcd6c4c26b"}</msg>
<status status="PASS" starttime="20230717 10:49:08.835" endtime="20230717 10:49:09.233"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:49:09.777" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:49:09.777" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:49:09.233" endtime="20230717 10:49:09.777"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:49:09.778" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:49:09.777" endtime="20230717 10:49:09.778"/>
</kw>
<status status="PASS" starttime="20230717 10:49:08.835" endtime="20230717 10:49:09.778"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;admin@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:09.779" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:09.779" endtime="20230717 10:49:09.779"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:09.780" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:09.780" endtime="20230717 10:49:09.780"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:09.780" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:09.780" endtime="20230717 10:49:09.780"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:09.780" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:09.780" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:09.780" endtime="20230717 10:49:09.780"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:09.781" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:09.780" endtime="20230717 10:49:09.781"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:09.781" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:09.782" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:09.781" endtime="20230717 10:49:09.782"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.782" endtime="20230717 10:49:09.782"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.782" endtime="20230717 10:49:09.782"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:09.782" endtime="20230717 10:49:09.782"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.783" endtime="20230717 10:49:09.783"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.783" endtime="20230717 10:49:09.783"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.783" endtime="20230717 10:49:09.783"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:09.782" endtime="20230717 10:49:09.783"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.784" endtime="20230717 10:49:09.784"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.784" endtime="20230717 10:49:09.784"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:09.783" endtime="20230717 10:49:09.784"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.784" endtime="20230717 10:49:09.784"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.784" endtime="20230717 10:49:09.784"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:09.784" endtime="20230717 10:49:09.784"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.785" endtime="20230717 10:49:09.785"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:09.785" endtime="20230717 10:49:09.785"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:09.785" endtime="20230717 10:49:09.785"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:09.785" endtime="20230717 10:49:09.785"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.786" endtime="20230717 10:49:09.786"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.787" endtime="20230717 10:49:09.787"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:09.785" endtime="20230717 10:49:09.787"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.789" endtime="20230717 10:49:09.790"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:09.787" endtime="20230717 10:49:09.790"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.791" endtime="20230717 10:49:09.791"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:09.790" endtime="20230717 10:49:09.791"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.791" endtime="20230717 10:49:09.791"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:09.791" endtime="20230717 10:49:09.791"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:09.792" endtime="20230717 10:49:09.792"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:09.791" endtime="20230717 10:49:09.792"/>
</branch>
<status status="PASS" starttime="20230717 10:49:09.782" endtime="20230717 10:49:09.792"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:09.793" level="INFO">Length is 15</msg>
<msg timestamp="20230717 10:49:09.793" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230717 10:49:09.793" endtime="20230717 10:49:09.793"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:09.794" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:09.793" endtime="20230717 10:49:09.794"/>
</kw>
<status status="PASS" starttime="20230717 10:49:09.793" endtime="20230717 10:49:09.794"/>
</branch>
<status status="PASS" starttime="20230717 10:49:09.793" endtime="20230717 10:49:09.794"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:09.794" endtime="20230717 10:49:09.794"/>
</return>
<msg timestamp="20230717 10:49:09.795" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:09.779" endtime="20230717 10:49:09.795"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:09.795" endtime="20230717 10:49:09.795"/>
</return>
<msg timestamp="20230717 10:49:09.796" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:09.795" endtime="20230717 10:49:09.796"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:09.796" endtime="20230717 10:49:10.781"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:10.781" level="INFO">Fills the text 'admin@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:10.781" endtime="20230717 10:49:10.814"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:10.814" level="INFO">Length is 15</msg>
<msg timestamp="20230717 10:49:10.814" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230717 10:49:10.814" endtime="20230717 10:49:10.814"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:10.815" level="INFO">${STATE["Tên đăng nhập"]} = admin@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:10.815" endtime="20230717 10:49:10.815"/>
</kw>
<status status="PASS" starttime="20230717 10:49:10.815" endtime="20230717 10:49:10.815"/>
</branch>
<status status="PASS" starttime="20230717 10:49:10.814" endtime="20230717 10:49:10.815"/>
</if>
<status status="PASS" starttime="20230717 10:49:09.778" endtime="20230717 10:49:10.815"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;HD123@&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:10.819" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:10.818" endtime="20230717 10:49:10.819"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:10.819" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:10.819" endtime="20230717 10:49:10.819"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:10.819" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:10.819" endtime="20230717 10:49:10.819"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:10.819" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:10.820" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:10.819" endtime="20230717 10:49:10.820"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:10.820" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:10.820" endtime="20230717 10:49:10.820"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:10.821" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:10.821" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:10.820" endtime="20230717 10:49:10.821"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.821" endtime="20230717 10:49:10.821"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.821" endtime="20230717 10:49:10.821"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:10.821" endtime="20230717 10:49:10.821"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.822" endtime="20230717 10:49:10.822"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.822" endtime="20230717 10:49:10.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.822" endtime="20230717 10:49:10.822"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:10.821" endtime="20230717 10:49:10.822"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.822" endtime="20230717 10:49:10.822"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.822" endtime="20230717 10:49:10.822"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:10.822" endtime="20230717 10:49:10.822"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.823" endtime="20230717 10:49:10.823"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.823" endtime="20230717 10:49:10.823"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:10.822" endtime="20230717 10:49:10.823"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.823" endtime="20230717 10:49:10.823"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:10.823" endtime="20230717 10:49:10.824"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:10.824" endtime="20230717 10:49:10.824"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:10.824" endtime="20230717 10:49:10.824"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.824" endtime="20230717 10:49:10.825"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.825" endtime="20230717 10:49:10.825"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:10.824" endtime="20230717 10:49:10.825"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.826" endtime="20230717 10:49:10.826"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:10.825" endtime="20230717 10:49:10.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.826" endtime="20230717 10:49:10.826"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:10.826" endtime="20230717 10:49:10.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.827" endtime="20230717 10:49:10.827"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:10.826" endtime="20230717 10:49:10.827"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:10.827" endtime="20230717 10:49:10.828"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:10.827" endtime="20230717 10:49:10.828"/>
</branch>
<status status="PASS" starttime="20230717 10:49:10.821" endtime="20230717 10:49:10.828"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:10.829" level="INFO">Length is 6</msg>
<msg timestamp="20230717 10:49:10.830" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20230717 10:49:10.828" endtime="20230717 10:49:10.830"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:10.831" level="INFO">${text} = HD123@</msg>
<status status="PASS" starttime="20230717 10:49:10.831" endtime="20230717 10:49:10.831"/>
</kw>
<status status="PASS" starttime="20230717 10:49:10.830" endtime="20230717 10:49:10.831"/>
</branch>
<status status="PASS" starttime="20230717 10:49:10.830" endtime="20230717 10:49:10.831"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:10.831" endtime="20230717 10:49:10.832"/>
</return>
<msg timestamp="20230717 10:49:10.832" level="INFO">${text} = HD123@</msg>
<status status="PASS" starttime="20230717 10:49:10.818" endtime="20230717 10:49:10.832"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:10.832" endtime="20230717 10:49:10.832"/>
</return>
<msg timestamp="20230717 10:49:10.832" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:10.832" endtime="20230717 10:49:10.832"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:10.833" endtime="20230717 10:49:10.884"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:10.885" level="INFO">Fills the text 'HD123@' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:10.884" endtime="20230717 10:49:10.916"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:10.917" level="INFO">Length is 6</msg>
<msg timestamp="20230717 10:49:10.917" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20230717 10:49:10.916" endtime="20230717 10:49:10.917"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:10.918" level="INFO">${STATE["Mật khẩu"]} = HD123@</msg>
<status status="PASS" starttime="20230717 10:49:10.918" endtime="20230717 10:49:10.918"/>
</kw>
<status status="PASS" starttime="20230717 10:49:10.917" endtime="20230717 10:49:10.918"/>
</branch>
<status status="PASS" starttime="20230717 10:49:10.917" endtime="20230717 10:49:10.918"/>
</if>
<status status="PASS" starttime="20230717 10:49:10.817" endtime="20230717 10:49:10.918"/>
</kw>
<kw name="When Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:10.921" endtime="20230717 10:49:11.050"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:11.051" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230717 10:49:11.051" endtime="20230717 10:49:11.051"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:11.058" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:11.052" endtime="20230717 10:49:11.058"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:11.059" endtime="20230717 10:49:11.059"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230717 10:49:11.060" endtime="20230717 10:49:11.060"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:11.059" endtime="20230717 10:49:11.060"/>
</branch>
<status status="PASS" starttime="20230717 10:49:11.058" endtime="20230717 10:49:11.060"/>
</if>
<status status="PASS" starttime="20230717 10:49:11.051" endtime="20230717 10:49:11.060"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230717 10:49:11.060" endtime="20230717 10:49:11.100"/>
</kw>
<status status="PASS" starttime="20230717 10:49:10.920" endtime="20230717 10:49:11.100"/>
</kw>
<kw name="When User look message &quot;Thông tin đăng nhập không hợp lệ cho người dùng admin@admin.com&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:11.103" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:11.102" endtime="20230717 10:49:11.103"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:11.103" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:11.103" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:11.103" endtime="20230717 10:49:11.103"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:11.104" endtime="20230717 10:49:11.104"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:11.103" endtime="20230717 10:49:11.104"/>
</branch>
<status status="PASS" starttime="20230717 10:49:11.103" endtime="20230717 10:49:11.104"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:49:11.962" level="INFO">Text: 'Thông tin đăng nhập không hợp lệ cho người dùng admin@admin.com'</msg>
<status status="PASS" starttime="20230717 10:49:11.106" endtime="20230717 10:49:11.962"/>
</kw>
<status status="PASS" starttime="20230717 10:49:11.104" endtime="20230717 10:49:11.962"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:11.963" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230717 10:49:11.963" endtime="20230717 10:49:11.963"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:49:12.379" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230717 10:49:12.379" level="INFO">See also file:///D:/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230717 10:49:12.379" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230717 10:49:11.965" endtime="20230717 10:49:12.380"/>
</kw>
<status status="FAIL" starttime="20230717 10:49:11.964" endtime="20230717 10:49:12.381"/>
</kw>
<msg timestamp="20230717 10:49:12.381" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230717 10:49:11.963" endtime="20230717 10:49:12.381"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:12.381" endtime="20230717 10:49:12.382"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:12.381" endtime="20230717 10:49:12.382"/>
</branch>
<status status="PASS" starttime="20230717 10:49:12.381" endtime="20230717 10:49:12.382"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:12.382" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230717 10:49:12.382" endtime="20230717 10:49:12.382"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:12.399" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:12.383" endtime="20230717 10:49:12.399"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230717 10:49:12.399" endtime="20230717 10:49:12.399"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:12.399" endtime="20230717 10:49:12.399"/>
</branch>
<status status="PASS" starttime="20230717 10:49:12.399" endtime="20230717 10:49:12.399"/>
</if>
<status status="PASS" starttime="20230717 10:49:12.382" endtime="20230717 10:49:12.399"/>
</kw>
<status status="PASS" starttime="20230717 10:49:11.102" endtime="20230717 10:49:12.400"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:49:12.464" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:49:12.401" endtime="20230717 10:49:12.464"/>
</kw>
<status status="PASS" starttime="20230717 10:49:12.400" endtime="20230717 10:49:12.465"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:49:08.831" endtime="20230717 10:49:12.465"/>
</test>
<test id="s1-t5" name="LG-16 Verify that login when caps lock fisrt letter in entry Email" line="34">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:49:12.474" endtime="20230717 10:49:12.475"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:49:12.475" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\f5113d5c-a132-4b5b-87f1-62f0bed843d0"}</msg>
<msg timestamp="20230717 10:49:12.990" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\f5113d5c-a132-4b5b-87f1-62f0bed843d0"}</msg>
<status status="PASS" starttime="20230717 10:49:12.475" endtime="20230717 10:49:12.990"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:49:13.649" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:49:13.649" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:49:12.990" endtime="20230717 10:49:13.650"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:49:13.650" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:49:13.650" endtime="20230717 10:49:13.650"/>
</kw>
<status status="PASS" starttime="20230717 10:49:12.474" endtime="20230717 10:49:13.650"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;Hoangdieu181021@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:13.653" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:13.653" endtime="20230717 10:49:13.653"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:13.653" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:13.653" endtime="20230717 10:49:13.653"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:13.654" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:13.653" endtime="20230717 10:49:13.654"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:13.654" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:13.654" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:13.654" endtime="20230717 10:49:13.654"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:13.655" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:13.655" endtime="20230717 10:49:13.655"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:13.655" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:13.656" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:13.655" endtime="20230717 10:49:13.656"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.656" endtime="20230717 10:49:13.656"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.657" endtime="20230717 10:49:13.657"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:13.656" endtime="20230717 10:49:13.657"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.657" endtime="20230717 10:49:13.658"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.658" endtime="20230717 10:49:13.658"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.658" endtime="20230717 10:49:13.658"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:13.657" endtime="20230717 10:49:13.659"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.659" endtime="20230717 10:49:13.659"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.659" endtime="20230717 10:49:13.659"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:13.659" endtime="20230717 10:49:13.660"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.660" endtime="20230717 10:49:13.660"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.660" endtime="20230717 10:49:13.660"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:13.660" endtime="20230717 10:49:13.660"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.661" endtime="20230717 10:49:13.661"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:13.661" endtime="20230717 10:49:13.661"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:13.662" endtime="20230717 10:49:13.662"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:13.661" endtime="20230717 10:49:13.662"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.662" endtime="20230717 10:49:13.662"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.663" endtime="20230717 10:49:13.663"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:13.662" endtime="20230717 10:49:13.663"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.665" endtime="20230717 10:49:13.666"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:13.663" endtime="20230717 10:49:13.666"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.667" endtime="20230717 10:49:13.668"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:13.666" endtime="20230717 10:49:13.668"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.668" endtime="20230717 10:49:13.669"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:13.668" endtime="20230717 10:49:13.669"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:13.669" endtime="20230717 10:49:13.669"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:13.669" endtime="20230717 10:49:13.669"/>
</branch>
<status status="PASS" starttime="20230717 10:49:13.656" endtime="20230717 10:49:13.670"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:13.670" level="INFO">Length is 25</msg>
<msg timestamp="20230717 10:49:13.670" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230717 10:49:13.670" endtime="20230717 10:49:13.670"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:13.672" level="INFO">${text} = Hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:49:13.671" endtime="20230717 10:49:13.672"/>
</kw>
<status status="PASS" starttime="20230717 10:49:13.671" endtime="20230717 10:49:13.672"/>
</branch>
<status status="PASS" starttime="20230717 10:49:13.671" endtime="20230717 10:49:13.672"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:13.672" endtime="20230717 10:49:13.672"/>
</return>
<msg timestamp="20230717 10:49:13.672" level="INFO">${text} = Hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:49:13.652" endtime="20230717 10:49:13.672"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:13.673" endtime="20230717 10:49:13.673"/>
</return>
<msg timestamp="20230717 10:49:13.673" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:13.672" endtime="20230717 10:49:13.673"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:13.673" endtime="20230717 10:49:14.791"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:14.792" level="INFO">Fills the text 'Hoangdieu181021@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:14.791" endtime="20230717 10:49:14.828"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:14.828" level="INFO">Length is 25</msg>
<msg timestamp="20230717 10:49:14.828" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230717 10:49:14.828" endtime="20230717 10:49:14.828"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:14.829" level="INFO">${STATE["Tên đăng nhập"]} = Hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:49:14.829" endtime="20230717 10:49:14.829"/>
</kw>
<status status="PASS" starttime="20230717 10:49:14.828" endtime="20230717 10:49:14.829"/>
</branch>
<status status="PASS" starttime="20230717 10:49:14.828" endtime="20230717 10:49:14.829"/>
</if>
<status status="PASS" starttime="20230717 10:49:13.652" endtime="20230717 10:49:14.829"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Password1!&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:14.832" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:14.832" endtime="20230717 10:49:14.832"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:14.833" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:14.832" endtime="20230717 10:49:14.833"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:14.833" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:14.833" endtime="20230717 10:49:14.833"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:14.833" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:14.833" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:14.833" endtime="20230717 10:49:14.833"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:14.834" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:14.834" endtime="20230717 10:49:14.834"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:14.834" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:14.834" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:14.834" endtime="20230717 10:49:14.834"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.835" endtime="20230717 10:49:14.835"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.835" endtime="20230717 10:49:14.835"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:14.834" endtime="20230717 10:49:14.835"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.835" endtime="20230717 10:49:14.835"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.836" endtime="20230717 10:49:14.836"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.837" endtime="20230717 10:49:14.837"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:14.835" endtime="20230717 10:49:14.837"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.837" endtime="20230717 10:49:14.837"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.837" endtime="20230717 10:49:14.837"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:14.837" endtime="20230717 10:49:14.837"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.838" endtime="20230717 10:49:14.838"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.838" endtime="20230717 10:49:14.838"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:14.837" endtime="20230717 10:49:14.838"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.838" endtime="20230717 10:49:14.838"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:14.838" endtime="20230717 10:49:14.838"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:14.839" endtime="20230717 10:49:14.839"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:14.838" endtime="20230717 10:49:14.839"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.839" endtime="20230717 10:49:14.839"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.839" endtime="20230717 10:49:14.839"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:14.839" endtime="20230717 10:49:14.840"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.840" endtime="20230717 10:49:14.840"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:14.840" endtime="20230717 10:49:14.840"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.840" endtime="20230717 10:49:14.841"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:14.840" endtime="20230717 10:49:14.841"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.841" endtime="20230717 10:49:14.841"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:14.841" endtime="20230717 10:49:14.841"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:14.842" endtime="20230717 10:49:14.842"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:14.841" endtime="20230717 10:49:14.842"/>
</branch>
<status status="PASS" starttime="20230717 10:49:14.834" endtime="20230717 10:49:14.842"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:14.842" level="INFO">Length is 10</msg>
<msg timestamp="20230717 10:49:14.842" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230717 10:49:14.842" endtime="20230717 10:49:14.843"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:14.843" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230717 10:49:14.843" endtime="20230717 10:49:14.844"/>
</kw>
<status status="PASS" starttime="20230717 10:49:14.843" endtime="20230717 10:49:14.844"/>
</branch>
<status status="PASS" starttime="20230717 10:49:14.843" endtime="20230717 10:49:14.844"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:14.844" endtime="20230717 10:49:14.844"/>
</return>
<msg timestamp="20230717 10:49:14.844" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230717 10:49:14.832" endtime="20230717 10:49:14.844"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:14.845" endtime="20230717 10:49:14.845"/>
</return>
<msg timestamp="20230717 10:49:14.845" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:14.844" endtime="20230717 10:49:14.845"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:14.845" endtime="20230717 10:49:14.906"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:14.907" level="INFO">Fills the text 'Password1!' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:14.907" endtime="20230717 10:49:14.939"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:14.939" level="INFO">Length is 10</msg>
<msg timestamp="20230717 10:49:14.939" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230717 10:49:14.939" endtime="20230717 10:49:14.939"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:14.940" level="INFO">${STATE["Mật khẩu"]} = Password1!</msg>
<status status="PASS" starttime="20230717 10:49:14.940" endtime="20230717 10:49:14.940"/>
</kw>
<status status="PASS" starttime="20230717 10:49:14.940" endtime="20230717 10:49:14.940"/>
</branch>
<status status="PASS" starttime="20230717 10:49:14.940" endtime="20230717 10:49:14.940"/>
</if>
<status status="PASS" starttime="20230717 10:49:14.831" endtime="20230717 10:49:14.940"/>
</kw>
<kw name="When Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:14.942" endtime="20230717 10:49:15.073"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:15.074" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230717 10:49:15.074" endtime="20230717 10:49:15.074"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:15.078" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:15.074" endtime="20230717 10:49:15.078"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:15.078" endtime="20230717 10:49:15.078"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230717 10:49:15.078" endtime="20230717 10:49:15.078"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:15.078" endtime="20230717 10:49:15.078"/>
</branch>
<status status="PASS" starttime="20230717 10:49:15.078" endtime="20230717 10:49:15.078"/>
</if>
<status status="PASS" starttime="20230717 10:49:15.073" endtime="20230717 10:49:15.078"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230717 10:49:15.078" endtime="20230717 10:49:15.113"/>
</kw>
<status status="PASS" starttime="20230717 10:49:14.942" endtime="20230717 10:49:15.113"/>
</kw>
<kw name="When User look message &quot;Người dùng Hoangdieu181021@gmail.com không tồn tại!&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:15.116" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:15.115" endtime="20230717 10:49:15.116"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:15.117" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:15.117" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:15.116" endtime="20230717 10:49:15.117"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:15.117" endtime="20230717 10:49:15.118"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:15.117" endtime="20230717 10:49:15.118"/>
</branch>
<status status="PASS" starttime="20230717 10:49:15.117" endtime="20230717 10:49:15.118"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:49:15.490" level="INFO">Text: 'Người dùng Hoangdieu181021@gmail.com không tồn tại!'</msg>
<status status="PASS" starttime="20230717 10:49:15.120" endtime="20230717 10:49:15.490"/>
</kw>
<status status="PASS" starttime="20230717 10:49:15.118" endtime="20230717 10:49:15.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:15.492" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230717 10:49:15.490" endtime="20230717 10:49:15.492"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:49:15.821" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230717 10:49:15.822" level="INFO">See also file:///D:/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230717 10:49:15.822" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230717 10:49:15.493" endtime="20230717 10:49:15.823"/>
</kw>
<status status="FAIL" starttime="20230717 10:49:15.492" endtime="20230717 10:49:15.824"/>
</kw>
<msg timestamp="20230717 10:49:15.824" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230717 10:49:15.492" endtime="20230717 10:49:15.824"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:15.825" endtime="20230717 10:49:15.825"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:15.825" endtime="20230717 10:49:15.825"/>
</branch>
<status status="PASS" starttime="20230717 10:49:15.824" endtime="20230717 10:49:15.825"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:15.826" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230717 10:49:15.826" endtime="20230717 10:49:15.826"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:15.834" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:15.827" endtime="20230717 10:49:15.834"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230717 10:49:15.834" endtime="20230717 10:49:15.835"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:15.834" endtime="20230717 10:49:15.835"/>
</branch>
<status status="PASS" starttime="20230717 10:49:15.834" endtime="20230717 10:49:15.835"/>
</if>
<status status="PASS" starttime="20230717 10:49:15.825" endtime="20230717 10:49:15.835"/>
</kw>
<status status="PASS" starttime="20230717 10:49:15.114" endtime="20230717 10:49:15.835"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:49:15.892" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:49:15.836" endtime="20230717 10:49:15.892"/>
</kw>
<status status="PASS" starttime="20230717 10:49:15.836" endtime="20230717 10:49:15.892"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:49:12.471" endtime="20230717 10:49:15.893"/>
</test>
<test id="s1-t6" name="LG-22 Verify that the password is displayed when clicking on the &quot;Eye&quot; icon" line="41">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:49:15.909" endtime="20230717 10:49:15.910"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:49:15.911" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\0fcd8707-845d-4a5a-b750-f8980c4abc3d"}</msg>
<msg timestamp="20230717 10:49:16.426" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\0fcd8707-845d-4a5a-b750-f8980c4abc3d"}</msg>
<status status="PASS" starttime="20230717 10:49:15.910" endtime="20230717 10:49:16.427"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:49:17.001" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:49:17.001" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:49:16.427" endtime="20230717 10:49:17.001"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:49:17.001" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:49:17.001" endtime="20230717 10:49:17.001"/>
</kw>
<status status="PASS" starttime="20230717 10:49:15.908" endtime="20230717 10:49:17.002"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;Hoangdieu181021@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:17.005" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:17.004" endtime="20230717 10:49:17.005"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:17.005" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:17.005" endtime="20230717 10:49:17.005"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:17.006" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:17.006" endtime="20230717 10:49:17.006"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:17.006" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:17.007" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:17.006" endtime="20230717 10:49:17.007"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:17.007" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:17.007" endtime="20230717 10:49:17.007"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:17.008" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:17.008" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:17.008" endtime="20230717 10:49:17.008"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.009" endtime="20230717 10:49:17.009"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.009" endtime="20230717 10:49:17.009"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:17.008" endtime="20230717 10:49:17.010"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.011" endtime="20230717 10:49:17.011"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.011" endtime="20230717 10:49:17.011"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.011" endtime="20230717 10:49:17.012"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:17.010" endtime="20230717 10:49:17.012"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.013" endtime="20230717 10:49:17.014"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.014" endtime="20230717 10:49:17.014"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:17.012" endtime="20230717 10:49:17.014"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.016" endtime="20230717 10:49:17.016"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.016" endtime="20230717 10:49:17.016"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:17.014" endtime="20230717 10:49:17.016"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.016" endtime="20230717 10:49:17.017"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:17.016" endtime="20230717 10:49:17.017"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:17.017" endtime="20230717 10:49:17.017"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:17.017" endtime="20230717 10:49:17.017"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.018" endtime="20230717 10:49:17.018"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.018" endtime="20230717 10:49:17.018"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:17.017" endtime="20230717 10:49:17.018"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.019" endtime="20230717 10:49:17.019"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:17.018" endtime="20230717 10:49:17.019"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.019" endtime="20230717 10:49:17.019"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:17.019" endtime="20230717 10:49:17.019"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.020" endtime="20230717 10:49:17.020"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:17.019" endtime="20230717 10:49:17.020"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:17.020" endtime="20230717 10:49:17.021"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:17.020" endtime="20230717 10:49:17.021"/>
</branch>
<status status="PASS" starttime="20230717 10:49:17.008" endtime="20230717 10:49:17.021"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:17.021" level="INFO">Length is 25</msg>
<msg timestamp="20230717 10:49:17.021" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230717 10:49:17.021" endtime="20230717 10:49:17.021"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:17.022" level="INFO">${text} = Hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:49:17.021" endtime="20230717 10:49:17.022"/>
</kw>
<status status="PASS" starttime="20230717 10:49:17.021" endtime="20230717 10:49:17.022"/>
</branch>
<status status="PASS" starttime="20230717 10:49:17.021" endtime="20230717 10:49:17.022"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:17.022" endtime="20230717 10:49:17.022"/>
</return>
<msg timestamp="20230717 10:49:17.022" level="INFO">${text} = Hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:49:17.004" endtime="20230717 10:49:17.022"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:17.023" endtime="20230717 10:49:17.023"/>
</return>
<msg timestamp="20230717 10:49:17.023" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:17.022" endtime="20230717 10:49:17.023"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:17.023" endtime="20230717 10:49:18.020"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:18.021" level="INFO">Fills the text 'Hoangdieu181021@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:18.021" endtime="20230717 10:49:18.058"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:18.058" level="INFO">Length is 25</msg>
<msg timestamp="20230717 10:49:18.058" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230717 10:49:18.058" endtime="20230717 10:49:18.058"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:18.059" level="INFO">${STATE["Tên đăng nhập"]} = Hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:49:18.059" endtime="20230717 10:49:18.059"/>
</kw>
<status status="PASS" starttime="20230717 10:49:18.059" endtime="20230717 10:49:18.059"/>
</branch>
<status status="PASS" starttime="20230717 10:49:18.059" endtime="20230717 10:49:18.060"/>
</if>
<status status="PASS" starttime="20230717 10:49:17.003" endtime="20230717 10:49:18.060"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;ABC@123456&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:18.062" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:18.062" endtime="20230717 10:49:18.062"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:18.063" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:18.063" endtime="20230717 10:49:18.063"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:18.063" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:18.063" endtime="20230717 10:49:18.063"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:18.063" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:18.063" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:18.063" endtime="20230717 10:49:18.063"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:18.064" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:18.064" endtime="20230717 10:49:18.064"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:18.064" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:18.064" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:18.064" endtime="20230717 10:49:18.064"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.065" endtime="20230717 10:49:18.065"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.065" endtime="20230717 10:49:18.065"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:18.064" endtime="20230717 10:49:18.065"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.065" endtime="20230717 10:49:18.065"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.065" endtime="20230717 10:49:18.065"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.066" endtime="20230717 10:49:18.066"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:18.065" endtime="20230717 10:49:18.066"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.066" endtime="20230717 10:49:18.066"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.066" endtime="20230717 10:49:18.067"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:18.066" endtime="20230717 10:49:18.067"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.067" endtime="20230717 10:49:18.068"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.068" endtime="20230717 10:49:18.068"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:18.067" endtime="20230717 10:49:18.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.069" endtime="20230717 10:49:18.069"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:18.068" endtime="20230717 10:49:18.070"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:18.070" endtime="20230717 10:49:18.070"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:18.070" endtime="20230717 10:49:18.071"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.072" endtime="20230717 10:49:18.073"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.073" endtime="20230717 10:49:18.073"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:18.071" endtime="20230717 10:49:18.074"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.074" endtime="20230717 10:49:18.074"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:18.074" endtime="20230717 10:49:18.074"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.075" endtime="20230717 10:49:18.075"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:18.074" endtime="20230717 10:49:18.075"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.075" endtime="20230717 10:49:18.075"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:18.075" endtime="20230717 10:49:18.075"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:18.075" endtime="20230717 10:49:18.076"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:18.075" endtime="20230717 10:49:18.076"/>
</branch>
<status status="PASS" starttime="20230717 10:49:18.064" endtime="20230717 10:49:18.076"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:18.076" level="INFO">Length is 10</msg>
<msg timestamp="20230717 10:49:18.076" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230717 10:49:18.076" endtime="20230717 10:49:18.076"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:18.077" level="INFO">${text} = ABC@123456</msg>
<status status="PASS" starttime="20230717 10:49:18.076" endtime="20230717 10:49:18.077"/>
</kw>
<status status="PASS" starttime="20230717 10:49:18.076" endtime="20230717 10:49:18.077"/>
</branch>
<status status="PASS" starttime="20230717 10:49:18.076" endtime="20230717 10:49:18.077"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:18.077" endtime="20230717 10:49:18.077"/>
</return>
<msg timestamp="20230717 10:49:18.077" level="INFO">${text} = ABC@123456</msg>
<status status="PASS" starttime="20230717 10:49:18.062" endtime="20230717 10:49:18.077"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:18.078" endtime="20230717 10:49:18.078"/>
</return>
<msg timestamp="20230717 10:49:18.078" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:18.078" endtime="20230717 10:49:18.078"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:18.078" endtime="20230717 10:49:18.128"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:18.129" level="INFO">Fills the text 'ABC@123456' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:18.128" endtime="20230717 10:49:18.166"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:18.167" level="INFO">Length is 10</msg>
<msg timestamp="20230717 10:49:18.167" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230717 10:49:18.166" endtime="20230717 10:49:18.167"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:18.168" level="INFO">${STATE["Mật khẩu"]} = ABC@123456</msg>
<status status="PASS" starttime="20230717 10:49:18.167" endtime="20230717 10:49:18.168"/>
</kw>
<status status="PASS" starttime="20230717 10:49:18.167" endtime="20230717 10:49:18.168"/>
</branch>
<status status="PASS" starttime="20230717 10:49:18.167" endtime="20230717 10:49:18.168"/>
</if>
<status status="PASS" starttime="20230717 10:49:18.061" endtime="20230717 10:49:18.168"/>
</kw>
<kw name="When Click &quot;Mật khẩu&quot; Eye icon" library="common" sourcename="Click &quot;${name}&quot; Eye icon">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]//following-sibling::*</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:18.171" endtime="20230717 10:49:18.171"/>
</return>
<msg timestamp="20230717 10:49:18.171" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]//following-sibling::*</msg>
<status status="PASS" starttime="20230717 10:49:18.170" endtime="20230717 10:49:18.171"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:18.171" endtime="20230717 10:49:18.262"/>
</kw>
<status status="PASS" starttime="20230717 10:49:18.169" endtime="20230717 10:49:18.262"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230717 10:49:20.265" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230717 10:49:18.264" endtime="20230717 10:49:20.265"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:49:20.356" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:49:20.269" endtime="20230717 10:49:20.356"/>
</kw>
<status status="PASS" starttime="20230717 10:49:20.268" endtime="20230717 10:49:20.357"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:49:15.904" endtime="20230717 10:49:20.357"/>
</test>
<test id="s1-t7" name="LG-23 Verify that clicking on the browser back button after successful login should not take the User to log out mode" line="48">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:49:20.371" endtime="20230717 10:49:20.372"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:49:20.373" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\b25a9878-171e-4706-a99b-fefa796b57a3"}</msg>
<msg timestamp="20230717 10:49:20.793" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\b25a9878-171e-4706-a99b-fefa796b57a3"}</msg>
<status status="PASS" starttime="20230717 10:49:20.372" endtime="20230717 10:49:20.793"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:49:21.390" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:49:21.390" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:49:20.793" endtime="20230717 10:49:21.390"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:49:21.391" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:49:21.390" endtime="20230717 10:49:21.391"/>
</kw>
<status status="PASS" starttime="20230717 10:49:20.371" endtime="20230717 10:49:21.391"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;hoangdieu181021@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:21.394" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:21.394" endtime="20230717 10:49:21.394"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:21.394" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:21.394" endtime="20230717 10:49:21.394"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:21.394" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:21.394" endtime="20230717 10:49:21.394"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:21.394" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:21.395" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:21.394" endtime="20230717 10:49:21.396"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:21.396" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:21.396" endtime="20230717 10:49:21.396"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:21.396" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:21.396" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:21.396" endtime="20230717 10:49:21.396"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.396" endtime="20230717 10:49:21.396"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.396" endtime="20230717 10:49:21.396"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:21.396" endtime="20230717 10:49:21.396"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.396" endtime="20230717 10:49:21.397"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.397" endtime="20230717 10:49:21.397"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.397" endtime="20230717 10:49:21.397"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:21.396" endtime="20230717 10:49:21.397"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.397" endtime="20230717 10:49:21.397"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.397" endtime="20230717 10:49:21.397"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:21.397" endtime="20230717 10:49:21.397"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.397" endtime="20230717 10:49:21.398"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.398" endtime="20230717 10:49:21.398"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:21.397" endtime="20230717 10:49:21.398"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.398" endtime="20230717 10:49:21.398"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:21.398" endtime="20230717 10:49:21.398"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:21.398" endtime="20230717 10:49:21.398"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:21.398" endtime="20230717 10:49:21.398"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.398" endtime="20230717 10:49:21.399"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.399" endtime="20230717 10:49:21.399"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:21.398" endtime="20230717 10:49:21.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.399" endtime="20230717 10:49:21.399"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:21.399" endtime="20230717 10:49:21.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.399" endtime="20230717 10:49:21.399"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:21.399" endtime="20230717 10:49:21.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.400" endtime="20230717 10:49:21.400"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:21.399" endtime="20230717 10:49:21.400"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:21.400" endtime="20230717 10:49:21.400"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:21.400" endtime="20230717 10:49:21.400"/>
</branch>
<status status="PASS" starttime="20230717 10:49:21.396" endtime="20230717 10:49:21.400"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:21.400" level="INFO">Length is 25</msg>
<msg timestamp="20230717 10:49:21.400" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230717 10:49:21.400" endtime="20230717 10:49:21.400"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:21.402" level="INFO">${text} = hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:49:21.401" endtime="20230717 10:49:21.402"/>
</kw>
<status status="PASS" starttime="20230717 10:49:21.401" endtime="20230717 10:49:21.402"/>
</branch>
<status status="PASS" starttime="20230717 10:49:21.401" endtime="20230717 10:49:21.402"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:21.402" endtime="20230717 10:49:21.402"/>
</return>
<msg timestamp="20230717 10:49:21.403" level="INFO">${text} = hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:49:21.393" endtime="20230717 10:49:21.403"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:21.403" endtime="20230717 10:49:21.403"/>
</return>
<msg timestamp="20230717 10:49:21.403" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:21.403" endtime="20230717 10:49:21.403"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:21.404" endtime="20230717 10:49:22.411"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:22.412" level="INFO">Fills the text 'hoangdieu181021@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:22.412" endtime="20230717 10:49:22.448"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:22.449" level="INFO">Length is 25</msg>
<msg timestamp="20230717 10:49:22.449" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20230717 10:49:22.448" endtime="20230717 10:49:22.449"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:22.450" level="INFO">${STATE["Tên đăng nhập"]} = hoangdieu181021@gmail.com</msg>
<status status="PASS" starttime="20230717 10:49:22.449" endtime="20230717 10:49:22.450"/>
</kw>
<status status="PASS" starttime="20230717 10:49:22.449" endtime="20230717 10:49:22.450"/>
</branch>
<status status="PASS" starttime="20230717 10:49:22.449" endtime="20230717 10:49:22.450"/>
</if>
<status status="PASS" starttime="20230717 10:49:21.392" endtime="20230717 10:49:22.450"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Na115689.&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:22.454" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:22.454" endtime="20230717 10:49:22.454"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:22.454" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:22.454" endtime="20230717 10:49:22.454"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:22.454" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:22.454" endtime="20230717 10:49:22.454"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:22.454" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:22.454" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:22.454" endtime="20230717 10:49:22.454"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:22.454" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:22.454" endtime="20230717 10:49:22.454"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:22.454" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:22.454" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:22.454" endtime="20230717 10:49:22.454"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.455" endtime="20230717 10:49:22.455"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.455" endtime="20230717 10:49:22.455"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.455" endtime="20230717 10:49:22.455"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.455" endtime="20230717 10:49:22.456"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.456" endtime="20230717 10:49:22.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.456" endtime="20230717 10:49:22.456"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.455" endtime="20230717 10:49:22.456"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.456" endtime="20230717 10:49:22.456"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.456" endtime="20230717 10:49:22.456"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.456" endtime="20230717 10:49:22.456"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.457" endtime="20230717 10:49:22.457"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.457" endtime="20230717 10:49:22.457"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.456" endtime="20230717 10:49:22.457"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.457" endtime="20230717 10:49:22.457"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.457" endtime="20230717 10:49:22.457"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:22.457" endtime="20230717 10:49:22.457"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.457" endtime="20230717 10:49:22.458"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.458" endtime="20230717 10:49:22.458"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.458" endtime="20230717 10:49:22.458"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.458" endtime="20230717 10:49:22.459"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.459" endtime="20230717 10:49:22.459"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.459" endtime="20230717 10:49:22.459"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.459" endtime="20230717 10:49:22.459"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.459" endtime="20230717 10:49:22.460"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.461" endtime="20230717 10:49:22.461"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.460" endtime="20230717 10:49:22.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.462" endtime="20230717 10:49:22.462"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.461" endtime="20230717 10:49:22.462"/>
</branch>
<status status="PASS" starttime="20230717 10:49:22.455" endtime="20230717 10:49:22.462"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:22.463" level="INFO">Length is 9</msg>
<msg timestamp="20230717 10:49:22.463" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20230717 10:49:22.462" endtime="20230717 10:49:22.463"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:22.465" level="INFO">${text} = Na115689.</msg>
<status status="PASS" starttime="20230717 10:49:22.464" endtime="20230717 10:49:22.465"/>
</kw>
<status status="PASS" starttime="20230717 10:49:22.463" endtime="20230717 10:49:22.465"/>
</branch>
<status status="PASS" starttime="20230717 10:49:22.463" endtime="20230717 10:49:22.465"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:22.465" endtime="20230717 10:49:22.465"/>
</return>
<msg timestamp="20230717 10:49:22.466" level="INFO">${text} = Na115689.</msg>
<status status="PASS" starttime="20230717 10:49:22.453" endtime="20230717 10:49:22.466"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:22.466" endtime="20230717 10:49:22.466"/>
</return>
<msg timestamp="20230717 10:49:22.467" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:22.466" endtime="20230717 10:49:22.467"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:22.467" endtime="20230717 10:49:22.519"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:22.521" level="INFO">Fills the text 'Na115689.' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:22.521" endtime="20230717 10:49:22.551"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:22.552" level="INFO">Length is 9</msg>
<msg timestamp="20230717 10:49:22.552" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20230717 10:49:22.552" endtime="20230717 10:49:22.552"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:22.553" level="INFO">${STATE["Mật khẩu"]} = Na115689.</msg>
<status status="PASS" starttime="20230717 10:49:22.553" endtime="20230717 10:49:22.553"/>
</kw>
<status status="PASS" starttime="20230717 10:49:22.552" endtime="20230717 10:49:22.553"/>
</branch>
<status status="PASS" starttime="20230717 10:49:22.552" endtime="20230717 10:49:22.553"/>
</if>
<status status="PASS" starttime="20230717 10:49:22.453" endtime="20230717 10:49:22.554"/>
</kw>
<kw name="When Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:22.555" endtime="20230717 10:49:22.692"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:22.693" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230717 10:49:22.693" endtime="20230717 10:49:22.693"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:22.698" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:22.693" endtime="20230717 10:49:22.698"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.699" endtime="20230717 10:49:22.699"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.699" endtime="20230717 10:49:22.699"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.698" endtime="20230717 10:49:22.699"/>
</branch>
<status status="PASS" starttime="20230717 10:49:22.698" endtime="20230717 10:49:22.699"/>
</if>
<status status="PASS" starttime="20230717 10:49:22.692" endtime="20230717 10:49:22.699"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230717 10:49:22.700" endtime="20230717 10:49:22.725"/>
</kw>
<status status="PASS" starttime="20230717 10:49:22.554" endtime="20230717 10:49:22.725"/>
</kw>
<kw name="When User look message &quot;Thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:22.727" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:22.727" endtime="20230717 10:49:22.727"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:22.728" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:22.728" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:22.727" endtime="20230717 10:49:22.728"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:22.728" endtime="20230717 10:49:22.728"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:22.728" endtime="20230717 10:49:22.728"/>
</branch>
<status status="PASS" starttime="20230717 10:49:22.728" endtime="20230717 10:49:22.728"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:49:24.639" level="INFO">Text: 'Thành công'</msg>
<status status="PASS" starttime="20230717 10:49:22.730" endtime="20230717 10:49:24.639"/>
</kw>
<status status="PASS" starttime="20230717 10:49:22.729" endtime="20230717 10:49:24.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:24.641" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230717 10:49:24.641" endtime="20230717 10:49:24.641"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:49:25.017" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-6.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-6.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230717 10:49:25.017" level="INFO">See also file:///D:/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230717 10:49:25.018" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230717 10:49:24.642" endtime="20230717 10:49:25.019"/>
</kw>
<status status="FAIL" starttime="20230717 10:49:24.641" endtime="20230717 10:49:25.020"/>
</kw>
<msg timestamp="20230717 10:49:25.020" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230717 10:49:24.641" endtime="20230717 10:49:25.020"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:25.020" endtime="20230717 10:49:25.020"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:25.020" endtime="20230717 10:49:25.020"/>
</branch>
<status status="PASS" starttime="20230717 10:49:25.020" endtime="20230717 10:49:25.020"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:25.022" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230717 10:49:25.022" endtime="20230717 10:49:25.022"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:25.041" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230717 10:49:25.022" endtime="20230717 10:49:25.041"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:49:25.862" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20230717 10:49:25.042" endtime="20230717 10:49:25.863"/>
</kw>
<status status="PASS" starttime="20230717 10:49:25.041" endtime="20230717 10:49:25.863"/>
</kw>
<status status="PASS" starttime="20230717 10:49:25.041" endtime="20230717 10:49:25.863"/>
</branch>
<status status="PASS" starttime="20230717 10:49:25.041" endtime="20230717 10:49:25.863"/>
</if>
<status status="PASS" starttime="20230717 10:49:25.020" endtime="20230717 10:49:25.863"/>
</kw>
<status status="PASS" starttime="20230717 10:49:22.726" endtime="20230717 10:49:25.864"/>
</kw>
<kw name="Go Back" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the previous page in history.</doc>
<msg timestamp="20230717 10:49:25.875" level="INFO">Did Go Back</msg>
<status status="PASS" starttime="20230717 10:49:25.866" endtime="20230717 10:49:25.876"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230717 10:49:27.877" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230717 10:49:25.876" endtime="20230717 10:49:27.877"/>
</kw>
<kw name="When Check Displayed &quot;Danh sách nghỉ phép&quot; ds" library="common" sourcename="Check Displayed &quot;${text}&quot; ds">
<kw name="Wait Until Element Is Visible" library="common">
<var>${element}</var>
<arg>//div[contains(@class, "items-center")]//h1[contains(text(), "${text}")]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:49:27.904" level="INFO">Waited for Element with selector //div[contains(@class, "items-center")]//h1[contains(text(), "Danh sách nghỉ phép")] at state visible</msg>
<status status="PASS" starttime="20230717 10:49:27.882" endtime="20230717 10:49:27.904"/>
</kw>
<msg timestamp="20230717 10:49:27.904" level="INFO">${element} = None</msg>
<status status="PASS" starttime="20230717 10:49:27.881" endtime="20230717 10:49:27.904"/>
</kw>
<status status="PASS" starttime="20230717 10:49:27.880" endtime="20230717 10:49:27.904"/>
</kw>
<kw name="When Check Displayed &quot;/assets/images/avatar.jpeg&quot;" library="common" sourcename="Check Displayed &quot;${url}&quot;">
<kw name="Wait Until Element Is Visible" library="common">
<var>${element}</var>
<arg>//img[contains(@src, "${url}")]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:49:27.930" level="INFO">Waited for Element with selector //img[contains(@src, "/assets/images/avatar.jpeg")] at state visible</msg>
<status status="PASS" starttime="20230717 10:49:27.908" endtime="20230717 10:49:27.931"/>
</kw>
<msg timestamp="20230717 10:49:27.932" level="INFO">${element} = None</msg>
<status status="PASS" starttime="20230717 10:49:27.907" endtime="20230717 10:49:27.932"/>
</kw>
<status status="PASS" starttime="20230717 10:49:27.907" endtime="20230717 10:49:27.932"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:49:28.002" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:49:27.937" endtime="20230717 10:49:28.002"/>
</kw>
<status status="PASS" starttime="20230717 10:49:27.935" endtime="20230717 10:49:28.002"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:49:20.365" endtime="20230717 10:49:28.003"/>
</test>
<test id="s1-t8" name="LG-28 Verify if a user cannot login with a incorrect/non-exist Username and an correct password." line="65">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:49:28.013" endtime="20230717 10:49:28.013"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:49:28.014" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\c0fa41d6-817c-4dee-8f3c-915ffe0575b6"}</msg>
<msg timestamp="20230717 10:49:28.427" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\c0fa41d6-817c-4dee-8f3c-915ffe0575b6"}</msg>
<status status="PASS" starttime="20230717 10:49:28.014" endtime="20230717 10:49:28.428"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:49:29.065" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:49:29.065" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:49:28.428" endtime="20230717 10:49:29.066"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:49:29.066" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:49:29.066" endtime="20230717 10:49:29.066"/>
</kw>
<status status="PASS" starttime="20230717 10:49:28.012" endtime="20230717 10:49:29.066"/>
</kw>
<kw name="When Click change language &quot;Tiếng Anh&quot;" library="common" sourcename="Click change language &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>//span[contains(@class, "ant-select-selection-item")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:29.069" endtime="20230717 10:49:29.850"/>
</kw>
<kw name="Click" library="Browser">
<arg>//*[contains(@class, "ant-select-item-option-content") and text()="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:29.850" endtime="20230717 10:49:30.201"/>
</kw>
<status status="PASS" starttime="20230717 10:49:29.068" endtime="20230717 10:49:30.201"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Username&quot; with &quot;admin12121@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:30.204" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:30.203" endtime="20230717 10:49:30.204"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:30.204" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:30.204" endtime="20230717 10:49:30.204"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:30.204" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:30.204" endtime="20230717 10:49:30.204"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:30.205" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:30.205" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:30.205" endtime="20230717 10:49:30.205"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:30.206" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:30.206" endtime="20230717 10:49:30.206"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:30.206" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:30.206" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:30.206" endtime="20230717 10:49:30.206"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.206" endtime="20230717 10:49:30.207"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.207" endtime="20230717 10:49:30.207"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.206" endtime="20230717 10:49:30.207"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.207" endtime="20230717 10:49:30.207"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.207" endtime="20230717 10:49:30.207"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.208" endtime="20230717 10:49:30.208"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.207" endtime="20230717 10:49:30.208"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.208" endtime="20230717 10:49:30.208"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.208" endtime="20230717 10:49:30.208"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.208" endtime="20230717 10:49:30.208"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.208" endtime="20230717 10:49:30.208"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.209" endtime="20230717 10:49:30.209"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.208" endtime="20230717 10:49:30.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.209" endtime="20230717 10:49:30.209"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.209" endtime="20230717 10:49:30.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:30.210" endtime="20230717 10:49:30.210"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.209" endtime="20230717 10:49:30.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.210" endtime="20230717 10:49:30.210"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.211" endtime="20230717 10:49:30.211"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.210" endtime="20230717 10:49:30.211"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.212" endtime="20230717 10:49:30.212"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.211" endtime="20230717 10:49:30.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.214" endtime="20230717 10:49:30.215"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.213" endtime="20230717 10:49:30.215"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.216" endtime="20230717 10:49:30.217"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.215" endtime="20230717 10:49:30.217"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.217" endtime="20230717 10:49:30.217"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.217" endtime="20230717 10:49:30.217"/>
</branch>
<status status="PASS" starttime="20230717 10:49:30.206" endtime="20230717 10:49:30.217"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:30.217" level="INFO">Length is 20</msg>
<msg timestamp="20230717 10:49:30.219" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20230717 10:49:30.217" endtime="20230717 10:49:30.219"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:30.219" level="INFO">${text} = admin12121@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:30.219" endtime="20230717 10:49:30.219"/>
</kw>
<status status="PASS" starttime="20230717 10:49:30.219" endtime="20230717 10:49:30.219"/>
</branch>
<status status="PASS" starttime="20230717 10:49:30.219" endtime="20230717 10:49:30.220"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:30.220" endtime="20230717 10:49:30.220"/>
</return>
<msg timestamp="20230717 10:49:30.220" level="INFO">${text} = admin12121@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:30.203" endtime="20230717 10:49:30.220"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:30.220" endtime="20230717 10:49:30.221"/>
</return>
<msg timestamp="20230717 10:49:30.221" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Username"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:30.220" endtime="20230717 10:49:30.221"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:30.221" endtime="20230717 10:49:30.251"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:30.251" level="INFO">Fills the text 'admin12121@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:30.251" endtime="20230717 10:49:30.294"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:30.294" level="INFO">Length is 20</msg>
<msg timestamp="20230717 10:49:30.296" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20230717 10:49:30.294" endtime="20230717 10:49:30.296"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:30.297" level="INFO">${STATE["Username"]} = admin12121@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:30.296" endtime="20230717 10:49:30.297"/>
</kw>
<status status="PASS" starttime="20230717 10:49:30.296" endtime="20230717 10:49:30.297"/>
</branch>
<status status="PASS" starttime="20230717 10:49:30.296" endtime="20230717 10:49:30.297"/>
</if>
<status status="PASS" starttime="20230717 10:49:30.202" endtime="20230717 10:49:30.297"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Password&quot; with &quot;Password1!&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:30.299" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:30.299" endtime="20230717 10:49:30.299"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:30.300" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:30.300" endtime="20230717 10:49:30.300"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:30.301" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:30.300" endtime="20230717 10:49:30.301"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:30.301" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:30.301" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:30.301" endtime="20230717 10:49:30.301"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:30.301" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:30.301" endtime="20230717 10:49:30.301"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:30.301" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:30.301" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:30.301" endtime="20230717 10:49:30.301"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.302" endtime="20230717 10:49:30.302"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.302" endtime="20230717 10:49:30.302"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.302" endtime="20230717 10:49:30.302"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.303" endtime="20230717 10:49:30.303"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.303" endtime="20230717 10:49:30.303"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.304" endtime="20230717 10:49:30.304"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.302" endtime="20230717 10:49:30.304"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.304" endtime="20230717 10:49:30.304"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.304" endtime="20230717 10:49:30.304"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.304" endtime="20230717 10:49:30.304"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.305" endtime="20230717 10:49:30.305"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.305" endtime="20230717 10:49:30.305"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.304" endtime="20230717 10:49:30.305"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.305" endtime="20230717 10:49:30.305"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.305" endtime="20230717 10:49:30.305"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:30.306" endtime="20230717 10:49:30.306"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.305" endtime="20230717 10:49:30.306"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.306" endtime="20230717 10:49:30.306"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.306" endtime="20230717 10:49:30.306"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.306" endtime="20230717 10:49:30.306"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.307" endtime="20230717 10:49:30.307"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.306" endtime="20230717 10:49:30.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.307" endtime="20230717 10:49:30.307"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.307" endtime="20230717 10:49:30.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.307" endtime="20230717 10:49:30.308"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.307" endtime="20230717 10:49:30.308"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.308" endtime="20230717 10:49:30.308"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.308" endtime="20230717 10:49:30.308"/>
</branch>
<status status="PASS" starttime="20230717 10:49:30.302" endtime="20230717 10:49:30.308"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:30.309" level="INFO">Length is 10</msg>
<msg timestamp="20230717 10:49:30.309" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230717 10:49:30.308" endtime="20230717 10:49:30.309"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:30.309" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230717 10:49:30.309" endtime="20230717 10:49:30.309"/>
</kw>
<status status="PASS" starttime="20230717 10:49:30.309" endtime="20230717 10:49:30.309"/>
</branch>
<status status="PASS" starttime="20230717 10:49:30.309" endtime="20230717 10:49:30.309"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:30.309" endtime="20230717 10:49:30.310"/>
</return>
<msg timestamp="20230717 10:49:30.310" level="INFO">${text} = Password1!</msg>
<status status="PASS" starttime="20230717 10:49:30.299" endtime="20230717 10:49:30.310"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:30.310" endtime="20230717 10:49:30.310"/>
</return>
<msg timestamp="20230717 10:49:30.310" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Password"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:30.310" endtime="20230717 10:49:30.310"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:30.310" endtime="20230717 10:49:30.364"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:30.364" level="INFO">Fills the text 'Password1!' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:30.364" endtime="20230717 10:49:30.396"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:30.396" level="INFO">Length is 10</msg>
<msg timestamp="20230717 10:49:30.396" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230717 10:49:30.396" endtime="20230717 10:49:30.396"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:30.397" level="INFO">${STATE["Password"]} = Password1!</msg>
<status status="PASS" starttime="20230717 10:49:30.396" endtime="20230717 10:49:30.397"/>
</kw>
<status status="PASS" starttime="20230717 10:49:30.396" endtime="20230717 10:49:30.398"/>
</branch>
<status status="PASS" starttime="20230717 10:49:30.396" endtime="20230717 10:49:30.398"/>
</if>
<status status="PASS" starttime="20230717 10:49:30.299" endtime="20230717 10:49:30.398"/>
</kw>
<kw name="When Click &quot;Log In&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:30.399" endtime="20230717 10:49:30.514"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:30.515" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230717 10:49:30.515" endtime="20230717 10:49:30.515"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:30.527" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:30.515" endtime="20230717 10:49:30.527"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.528" endtime="20230717 10:49:30.528"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.528" endtime="20230717 10:49:30.528"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.527" endtime="20230717 10:49:30.528"/>
</branch>
<status status="PASS" starttime="20230717 10:49:30.527" endtime="20230717 10:49:30.528"/>
</if>
<status status="PASS" starttime="20230717 10:49:30.514" endtime="20230717 10:49:30.528"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230717 10:49:30.528" endtime="20230717 10:49:30.560"/>
</kw>
<status status="PASS" starttime="20230717 10:49:30.399" endtime="20230717 10:49:30.561"/>
</kw>
<kw name="Then User look message &quot;User admin12121@admin.com not found!&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:30.564" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:30.564" endtime="20230717 10:49:30.564"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:30.565" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:30.565" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:30.564" endtime="20230717 10:49:30.565"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:30.565" endtime="20230717 10:49:30.565"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:30.565" endtime="20230717 10:49:30.565"/>
</branch>
<status status="PASS" starttime="20230717 10:49:30.565" endtime="20230717 10:49:30.566"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:49:30.910" level="INFO">Text: 'User admin12121@admin.com not found!'</msg>
<status status="PASS" starttime="20230717 10:49:30.568" endtime="20230717 10:49:30.910"/>
</kw>
<status status="PASS" starttime="20230717 10:49:30.566" endtime="20230717 10:49:30.910"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:30.911" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230717 10:49:30.911" endtime="20230717 10:49:30.911"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:49:31.204" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-7.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-7.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230717 10:49:31.204" level="INFO">See also file:///D:/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230717 10:49:31.205" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230717 10:49:30.912" endtime="20230717 10:49:31.206"/>
</kw>
<status status="FAIL" starttime="20230717 10:49:30.911" endtime="20230717 10:49:31.206"/>
</kw>
<msg timestamp="20230717 10:49:31.206" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230717 10:49:30.911" endtime="20230717 10:49:31.207"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:31.207" endtime="20230717 10:49:31.207"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:31.207" endtime="20230717 10:49:31.207"/>
</branch>
<status status="PASS" starttime="20230717 10:49:31.207" endtime="20230717 10:49:31.207"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:31.208" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230717 10:49:31.207" endtime="20230717 10:49:31.208"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:31.214" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:31.208" endtime="20230717 10:49:31.214"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230717 10:49:31.215" endtime="20230717 10:49:31.215"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:31.214" endtime="20230717 10:49:31.215"/>
</branch>
<status status="PASS" starttime="20230717 10:49:31.214" endtime="20230717 10:49:31.215"/>
</if>
<status status="PASS" starttime="20230717 10:49:31.207" endtime="20230717 10:49:31.215"/>
</kw>
<status status="PASS" starttime="20230717 10:49:30.563" endtime="20230717 10:49:31.215"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:49:31.271" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:49:31.217" endtime="20230717 10:49:31.272"/>
</kw>
<status status="PASS" starttime="20230717 10:49:31.216" endtime="20230717 10:49:31.272"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:49:28.008" endtime="20230717 10:49:31.273"/>
</test>
<test id="s1-t9" name="LG-29 Verify if a user cannot login with correct Username and an incorrect/non-exist password." line="73">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:49:31.288" endtime="20230717 10:49:31.288"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:49:31.290" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\6d1cd5ed-a05e-41ae-8d87-4cad0f0426a6"}</msg>
<msg timestamp="20230717 10:49:31.689" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\6d1cd5ed-a05e-41ae-8d87-4cad0f0426a6"}</msg>
<status status="PASS" starttime="20230717 10:49:31.288" endtime="20230717 10:49:31.689"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:49:32.298" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:49:32.298" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:49:31.689" endtime="20230717 10:49:32.298"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:49:32.299" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:49:32.299" endtime="20230717 10:49:32.299"/>
</kw>
<status status="PASS" starttime="20230717 10:49:31.288" endtime="20230717 10:49:32.299"/>
</kw>
<kw name="When Click change language &quot;Tiếng Anh&quot;" library="common" sourcename="Click change language &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>//span[contains(@class, "ant-select-selection-item")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:32.301" endtime="20230717 10:49:32.799"/>
</kw>
<kw name="Click" library="Browser">
<arg>//*[contains(@class, "ant-select-item-option-content") and text()="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:32.799" endtime="20230717 10:49:33.227"/>
</kw>
<status status="PASS" starttime="20230717 10:49:32.301" endtime="20230717 10:49:33.228"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Username&quot; with &quot;admin@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:33.230" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:33.229" endtime="20230717 10:49:33.230"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:33.231" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:33.230" endtime="20230717 10:49:33.231"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:33.232" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:33.231" endtime="20230717 10:49:33.232"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:33.232" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:33.232" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:33.232" endtime="20230717 10:49:33.232"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:33.233" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:33.232" endtime="20230717 10:49:33.233"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:33.233" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:33.233" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:33.233" endtime="20230717 10:49:33.233"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.234" endtime="20230717 10:49:33.234"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.234" endtime="20230717 10:49:33.234"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.234" endtime="20230717 10:49:33.234"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.234" endtime="20230717 10:49:33.235"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.235" endtime="20230717 10:49:33.235"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.236" endtime="20230717 10:49:33.236"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.234" endtime="20230717 10:49:33.236"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.237" endtime="20230717 10:49:33.237"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.238" endtime="20230717 10:49:33.238"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.236" endtime="20230717 10:49:33.238"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.238" endtime="20230717 10:49:33.238"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.239" endtime="20230717 10:49:33.239"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.238" endtime="20230717 10:49:33.239"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.240" endtime="20230717 10:49:33.240"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.240" endtime="20230717 10:49:33.241"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:33.241" endtime="20230717 10:49:33.241"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.241" endtime="20230717 10:49:33.241"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.242" endtime="20230717 10:49:33.242"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.242" endtime="20230717 10:49:33.242"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.241" endtime="20230717 10:49:33.242"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.243" endtime="20230717 10:49:33.243"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.243" endtime="20230717 10:49:33.243"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.243" endtime="20230717 10:49:33.244"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.243" endtime="20230717 10:49:33.244"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.244" endtime="20230717 10:49:33.244"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.244" endtime="20230717 10:49:33.244"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.244" endtime="20230717 10:49:33.244"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.244" endtime="20230717 10:49:33.244"/>
</branch>
<status status="PASS" starttime="20230717 10:49:33.233" endtime="20230717 10:49:33.244"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:33.245" level="INFO">Length is 15</msg>
<msg timestamp="20230717 10:49:33.245" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230717 10:49:33.245" endtime="20230717 10:49:33.245"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:33.246" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:33.246" endtime="20230717 10:49:33.246"/>
</kw>
<status status="PASS" starttime="20230717 10:49:33.245" endtime="20230717 10:49:33.246"/>
</branch>
<status status="PASS" starttime="20230717 10:49:33.245" endtime="20230717 10:49:33.246"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:33.246" endtime="20230717 10:49:33.247"/>
</return>
<msg timestamp="20230717 10:49:33.247" level="INFO">${text} = admin@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:33.229" endtime="20230717 10:49:33.247"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:33.247" endtime="20230717 10:49:33.248"/>
</return>
<msg timestamp="20230717 10:49:33.248" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Username"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:33.247" endtime="20230717 10:49:33.248"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:33.248" endtime="20230717 10:49:33.282"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:33.284" level="INFO">Fills the text 'admin@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:33.283" endtime="20230717 10:49:33.311"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:33.312" level="INFO">Length is 15</msg>
<msg timestamp="20230717 10:49:33.312" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20230717 10:49:33.311" endtime="20230717 10:49:33.312"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:33.313" level="INFO">${STATE["Username"]} = admin@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:33.312" endtime="20230717 10:49:33.313"/>
</kw>
<status status="PASS" starttime="20230717 10:49:33.312" endtime="20230717 10:49:33.313"/>
</branch>
<status status="PASS" starttime="20230717 10:49:33.312" endtime="20230717 10:49:33.313"/>
</if>
<status status="PASS" starttime="20230717 10:49:33.229" endtime="20230717 10:49:33.313"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Password&quot; with &quot;HD123@&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:33.315" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:33.315" endtime="20230717 10:49:33.315"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:33.316" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:33.315" endtime="20230717 10:49:33.316"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:33.316" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:33.316" endtime="20230717 10:49:33.316"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:33.316" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:33.316" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:33.316" endtime="20230717 10:49:33.316"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:33.317" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:33.316" endtime="20230717 10:49:33.317"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:33.317" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:33.317" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:33.317" endtime="20230717 10:49:33.317"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.317" endtime="20230717 10:49:33.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.318" endtime="20230717 10:49:33.318"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.317" endtime="20230717 10:49:33.318"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.318" endtime="20230717 10:49:33.318"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.318" endtime="20230717 10:49:33.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.318" endtime="20230717 10:49:33.318"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.318" endtime="20230717 10:49:33.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.319" endtime="20230717 10:49:33.319"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.319" endtime="20230717 10:49:33.319"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.319" endtime="20230717 10:49:33.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.319" endtime="20230717 10:49:33.319"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.320" endtime="20230717 10:49:33.320"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.319" endtime="20230717 10:49:33.320"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.320" endtime="20230717 10:49:33.320"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.320" endtime="20230717 10:49:33.320"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:33.320" endtime="20230717 10:49:33.320"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.320" endtime="20230717 10:49:33.320"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.321" endtime="20230717 10:49:33.321"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.321" endtime="20230717 10:49:33.321"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.320" endtime="20230717 10:49:33.321"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.321" endtime="20230717 10:49:33.321"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.321" endtime="20230717 10:49:33.321"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.321" endtime="20230717 10:49:33.322"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.321" endtime="20230717 10:49:33.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.322" endtime="20230717 10:49:33.322"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.322" endtime="20230717 10:49:33.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.322" endtime="20230717 10:49:33.322"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.322" endtime="20230717 10:49:33.322"/>
</branch>
<status status="PASS" starttime="20230717 10:49:33.317" endtime="20230717 10:49:33.322"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:33.323" level="INFO">Length is 6</msg>
<msg timestamp="20230717 10:49:33.323" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20230717 10:49:33.322" endtime="20230717 10:49:33.323"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:33.323" level="INFO">${text} = HD123@</msg>
<status status="PASS" starttime="20230717 10:49:33.323" endtime="20230717 10:49:33.323"/>
</kw>
<status status="PASS" starttime="20230717 10:49:33.323" endtime="20230717 10:49:33.323"/>
</branch>
<status status="PASS" starttime="20230717 10:49:33.323" endtime="20230717 10:49:33.324"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:33.324" endtime="20230717 10:49:33.324"/>
</return>
<msg timestamp="20230717 10:49:33.324" level="INFO">${text} = HD123@</msg>
<status status="PASS" starttime="20230717 10:49:33.315" endtime="20230717 10:49:33.324"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:33.324" endtime="20230717 10:49:33.325"/>
</return>
<msg timestamp="20230717 10:49:33.325" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Password"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:33.324" endtime="20230717 10:49:33.325"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:33.325" endtime="20230717 10:49:33.377"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:33.378" level="INFO">Fills the text 'HD123@' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:33.378" endtime="20230717 10:49:33.411"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:33.411" level="INFO">Length is 6</msg>
<msg timestamp="20230717 10:49:33.411" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20230717 10:49:33.411" endtime="20230717 10:49:33.411"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:33.412" level="INFO">${STATE["Password"]} = HD123@</msg>
<status status="PASS" starttime="20230717 10:49:33.412" endtime="20230717 10:49:33.412"/>
</kw>
<status status="PASS" starttime="20230717 10:49:33.411" endtime="20230717 10:49:33.412"/>
</branch>
<status status="PASS" starttime="20230717 10:49:33.411" endtime="20230717 10:49:33.412"/>
</if>
<status status="PASS" starttime="20230717 10:49:33.314" endtime="20230717 10:49:33.412"/>
</kw>
<kw name="When Click &quot;Log In&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:33.414" endtime="20230717 10:49:33.561"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:33.562" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230717 10:49:33.561" endtime="20230717 10:49:33.562"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:33.568" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:33.562" endtime="20230717 10:49:33.568"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.569" endtime="20230717 10:49:33.569"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.569" endtime="20230717 10:49:33.569"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.568" endtime="20230717 10:49:33.570"/>
</branch>
<status status="PASS" starttime="20230717 10:49:33.568" endtime="20230717 10:49:33.570"/>
</if>
<status status="PASS" starttime="20230717 10:49:33.561" endtime="20230717 10:49:33.570"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230717 10:49:33.570" endtime="20230717 10:49:33.596"/>
</kw>
<status status="PASS" starttime="20230717 10:49:33.414" endtime="20230717 10:49:33.596"/>
</kw>
<kw name="Then User look message &quot;Invalid credentials for user admin@admin.com&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:33.598" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:33.598" endtime="20230717 10:49:33.599"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:33.599" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:33.599" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:33.599" endtime="20230717 10:49:33.599"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:33.599" endtime="20230717 10:49:33.600"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:33.599" endtime="20230717 10:49:33.600"/>
</branch>
<status status="PASS" starttime="20230717 10:49:33.599" endtime="20230717 10:49:33.600"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:49:34.446" level="INFO">Text: 'Invalid credentials for user admin@admin.com'</msg>
<status status="PASS" starttime="20230717 10:49:33.601" endtime="20230717 10:49:34.446"/>
</kw>
<status status="PASS" starttime="20230717 10:49:33.600" endtime="20230717 10:49:34.447"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:34.447" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230717 10:49:34.447" endtime="20230717 10:49:34.447"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230717 10:49:34.706" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-8.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-8.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230717 10:49:34.707" level="INFO">See also file:///D:/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230717 10:49:34.707" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230717 10:49:34.448" endtime="20230717 10:49:34.708"/>
</kw>
<status status="FAIL" starttime="20230717 10:49:34.447" endtime="20230717 10:49:34.708"/>
</kw>
<msg timestamp="20230717 10:49:34.709" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230717 10:49:34.447" endtime="20230717 10:49:34.709"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:34.710" endtime="20230717 10:49:34.710"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:34.709" endtime="20230717 10:49:34.710"/>
</branch>
<status status="PASS" starttime="20230717 10:49:34.709" endtime="20230717 10:49:34.710"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:34.711" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230717 10:49:34.711" endtime="20230717 10:49:34.711"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:34.725" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:34.711" endtime="20230717 10:49:34.725"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230717 10:49:34.726" endtime="20230717 10:49:34.726"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:34.725" endtime="20230717 10:49:34.726"/>
</branch>
<status status="PASS" starttime="20230717 10:49:34.725" endtime="20230717 10:49:34.726"/>
</if>
<status status="PASS" starttime="20230717 10:49:34.710" endtime="20230717 10:49:34.726"/>
</kw>
<status status="PASS" starttime="20230717 10:49:33.598" endtime="20230717 10:49:34.726"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:49:34.777" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:49:34.727" endtime="20230717 10:49:34.777"/>
</kw>
<status status="PASS" starttime="20230717 10:49:34.727" endtime="20230717 10:49:34.777"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:49:31.281" endtime="20230717 10:49:34.778"/>
</test>
<test id="s1-t10" name="LG-30 Verify if a user can't sign in with an empty Username" line="81">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:49:34.791" endtime="20230717 10:49:34.791"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:49:34.791" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\76db7fdd-be88-4d23-8c81-a10d9dc5e8fe"}</msg>
<msg timestamp="20230717 10:49:35.195" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\76db7fdd-be88-4d23-8c81-a10d9dc5e8fe"}</msg>
<status status="PASS" starttime="20230717 10:49:34.791" endtime="20230717 10:49:35.195"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:49:35.767" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:49:35.767" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:49:35.195" endtime="20230717 10:49:35.767"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:49:35.768" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:49:35.768" endtime="20230717 10:49:35.768"/>
</kw>
<status status="PASS" starttime="20230717 10:49:34.789" endtime="20230717 10:49:35.768"/>
</kw>
<kw name="When Click change language &quot;Tiếng Anh&quot;" library="common" sourcename="Click change language &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>//span[contains(@class, "ant-select-selection-item")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:35.770" endtime="20230717 10:49:36.311"/>
</kw>
<kw name="Click" library="Browser">
<arg>//*[contains(@class, "ant-select-item-option-content") and text()="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:36.312" endtime="20230717 10:49:36.675"/>
</kw>
<status status="PASS" starttime="20230717 10:49:35.769" endtime="20230717 10:49:36.675"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Password&quot; with &quot;HD123@&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:36.677" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:36.677" endtime="20230717 10:49:36.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:36.677" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:36.677" endtime="20230717 10:49:36.677"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:36.678" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:36.678" endtime="20230717 10:49:36.678"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:36.678" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:36.678" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:36.678" endtime="20230717 10:49:36.678"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:36.679" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:36.678" endtime="20230717 10:49:36.679"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:36.679" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:36.680" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:36.679" endtime="20230717 10:49:36.680"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.680" endtime="20230717 10:49:36.680"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.680" endtime="20230717 10:49:36.680"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:36.680" endtime="20230717 10:49:36.680"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.681" endtime="20230717 10:49:36.681"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.681" endtime="20230717 10:49:36.681"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.681" endtime="20230717 10:49:36.681"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:36.680" endtime="20230717 10:49:36.681"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.682" endtime="20230717 10:49:36.682"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.682" endtime="20230717 10:49:36.682"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:36.681" endtime="20230717 10:49:36.682"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.683" endtime="20230717 10:49:36.683"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.683" endtime="20230717 10:49:36.683"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:36.682" endtime="20230717 10:49:36.683"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.683" endtime="20230717 10:49:36.683"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:36.683" endtime="20230717 10:49:36.683"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:36.684" endtime="20230717 10:49:36.684"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:36.684" endtime="20230717 10:49:36.684"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.684" endtime="20230717 10:49:36.684"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.685" endtime="20230717 10:49:36.685"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:36.684" endtime="20230717 10:49:36.685"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.685" endtime="20230717 10:49:36.685"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:36.685" endtime="20230717 10:49:36.685"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.686" endtime="20230717 10:49:36.686"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:36.685" endtime="20230717 10:49:36.686"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.686" endtime="20230717 10:49:36.686"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:36.686" endtime="20230717 10:49:36.686"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:36.687" endtime="20230717 10:49:36.688"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:36.686" endtime="20230717 10:49:36.688"/>
</branch>
<status status="PASS" starttime="20230717 10:49:36.680" endtime="20230717 10:49:36.688"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:36.689" level="INFO">Length is 6</msg>
<msg timestamp="20230717 10:49:36.689" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20230717 10:49:36.688" endtime="20230717 10:49:36.689"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:36.692" level="INFO">${text} = HD123@</msg>
<status status="PASS" starttime="20230717 10:49:36.691" endtime="20230717 10:49:36.692"/>
</kw>
<status status="PASS" starttime="20230717 10:49:36.689" endtime="20230717 10:49:36.693"/>
</branch>
<status status="PASS" starttime="20230717 10:49:36.689" endtime="20230717 10:49:36.693"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:36.694" endtime="20230717 10:49:36.694"/>
</return>
<msg timestamp="20230717 10:49:36.695" level="INFO">${text} = HD123@</msg>
<status status="PASS" starttime="20230717 10:49:36.676" endtime="20230717 10:49:36.695"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:36.695" endtime="20230717 10:49:36.696"/>
</return>
<msg timestamp="20230717 10:49:36.696" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Password"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:36.695" endtime="20230717 10:49:36.696"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:36.696" endtime="20230717 10:49:36.726"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:36.726" level="INFO">Fills the text 'HD123@' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:36.726" endtime="20230717 10:49:36.758"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:36.758" level="INFO">Length is 6</msg>
<msg timestamp="20230717 10:49:36.758" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20230717 10:49:36.758" endtime="20230717 10:49:36.758"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:36.759" level="INFO">${STATE["Password"]} = HD123@</msg>
<status status="PASS" starttime="20230717 10:49:36.759" endtime="20230717 10:49:36.759"/>
</kw>
<status status="PASS" starttime="20230717 10:49:36.759" endtime="20230717 10:49:36.759"/>
</branch>
<status status="PASS" starttime="20230717 10:49:36.758" endtime="20230717 10:49:36.759"/>
</if>
<status status="PASS" starttime="20230717 10:49:36.676" endtime="20230717 10:49:36.759"/>
</kw>
<kw name="When Click &quot;Log In&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:36.760" endtime="20230717 10:49:37.100"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:37.102" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230717 10:49:37.101" endtime="20230717 10:49:37.102"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:37.112" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:37.102" endtime="20230717 10:49:37.112"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:37.113" endtime="20230717 10:49:37.113"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230717 10:49:37.113" endtime="20230717 10:49:37.113"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:37.112" endtime="20230717 10:49:37.113"/>
</branch>
<status status="PASS" starttime="20230717 10:49:37.112" endtime="20230717 10:49:37.113"/>
</if>
<status status="PASS" starttime="20230717 10:49:37.101" endtime="20230717 10:49:37.113"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230717 10:49:37.113" endtime="20230717 10:49:37.143"/>
</kw>
<status status="PASS" starttime="20230717 10:49:36.760" endtime="20230717 10:49:37.143"/>
</kw>
<kw name="Then Required message &quot;Username&quot; displayed under &quot;Please enter username&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:37.147" endtime="20230717 10:49:37.147"/>
</return>
<msg timestamp="20230717 10:49:37.147" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Username"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230717 10:49:37.146" endtime="20230717 10:49:37.147"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:49:37.213" level="INFO">Text: 'Please enter username'</msg>
<status status="PASS" starttime="20230717 10:49:37.149" endtime="20230717 10:49:37.213"/>
</kw>
<status status="PASS" starttime="20230717 10:49:37.147" endtime="20230717 10:49:37.213"/>
</kw>
<status status="PASS" starttime="20230717 10:49:37.145" endtime="20230717 10:49:37.213"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:49:37.272" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:49:37.215" endtime="20230717 10:49:37.272"/>
</kw>
<status status="PASS" starttime="20230717 10:49:37.215" endtime="20230717 10:49:37.273"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:49:34.784" endtime="20230717 10:49:37.273"/>
</test>
<test id="s1-t11" name="LG-31 Verify if a user can't sign in with an empty password" line="88">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:49:37.290" endtime="20230717 10:49:37.291"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:49:37.292" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\e899cef0-75ce-4a62-a756-0d2c9218e6c2"}</msg>
<msg timestamp="20230717 10:49:37.677" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\e899cef0-75ce-4a62-a756-0d2c9218e6c2"}</msg>
<status status="PASS" starttime="20230717 10:49:37.292" endtime="20230717 10:49:37.677"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:49:38.227" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:49:38.227" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:49:37.678" endtime="20230717 10:49:38.227"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:49:38.228" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:49:38.227" endtime="20230717 10:49:38.228"/>
</kw>
<status status="PASS" starttime="20230717 10:49:37.288" endtime="20230717 10:49:38.228"/>
</kw>
<kw name="When Click change language &quot;Tiếng Anh&quot;" library="common" sourcename="Click change language &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>//span[contains(@class, "ant-select-selection-item")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:38.230" endtime="20230717 10:49:39.026"/>
</kw>
<kw name="Click" library="Browser">
<arg>//*[contains(@class, "ant-select-item-option-content") and text()="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:39.026" endtime="20230717 10:49:39.373"/>
</kw>
<status status="PASS" starttime="20230717 10:49:38.229" endtime="20230717 10:49:39.374"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Username&quot; with &quot;admin12121@admin.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:39.375" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230717 10:49:39.375" endtime="20230717 10:49:39.375"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:39.376" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230717 10:49:39.376" endtime="20230717 10:49:39.376"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:39.376" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230717 10:49:39.376" endtime="20230717 10:49:39.376"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:39.376" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:39.376" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230717 10:49:39.376" endtime="20230717 10:49:39.376"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 10:49:39.377" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230717 10:49:39.377" endtime="20230717 10:49:39.377"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:39.377" level="INFO">Length is 0</msg>
<msg timestamp="20230717 10:49:39.377" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230717 10:49:39.377" endtime="20230717 10:49:39.377"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.378" endtime="20230717 10:49:39.378"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.378" endtime="20230717 10:49:39.378"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.377" endtime="20230717 10:49:39.379"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.379" endtime="20230717 10:49:39.379"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.379" endtime="20230717 10:49:39.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.380" endtime="20230717 10:49:39.380"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.379" endtime="20230717 10:49:39.380"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.380" endtime="20230717 10:49:39.380"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.380" endtime="20230717 10:49:39.380"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.380" endtime="20230717 10:49:39.380"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.381" endtime="20230717 10:49:39.381"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.381" endtime="20230717 10:49:39.381"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.380" endtime="20230717 10:49:39.381"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.381" endtime="20230717 10:49:39.381"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.381" endtime="20230717 10:49:39.381"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230717 10:49:39.381" endtime="20230717 10:49:39.382"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.381" endtime="20230717 10:49:39.382"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.382" endtime="20230717 10:49:39.382"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.382" endtime="20230717 10:49:39.382"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.382" endtime="20230717 10:49:39.382"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.382" endtime="20230717 10:49:39.382"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.382" endtime="20230717 10:49:39.382"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.383" endtime="20230717 10:49:39.383"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.382" endtime="20230717 10:49:39.383"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.383" endtime="20230717 10:49:39.383"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.383" endtime="20230717 10:49:39.383"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.383" endtime="20230717 10:49:39.384"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.383" endtime="20230717 10:49:39.384"/>
</branch>
<status status="PASS" starttime="20230717 10:49:39.377" endtime="20230717 10:49:39.384"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:39.385" level="INFO">Length is 20</msg>
<msg timestamp="20230717 10:49:39.385" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20230717 10:49:39.384" endtime="20230717 10:49:39.385"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230717 10:49:39.386" level="INFO">${text} = admin12121@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:39.385" endtime="20230717 10:49:39.386"/>
</kw>
<status status="PASS" starttime="20230717 10:49:39.385" endtime="20230717 10:49:39.386"/>
</branch>
<status status="PASS" starttime="20230717 10:49:39.385" endtime="20230717 10:49:39.386"/>
</if>
<return>
<value>${text}</value>
<status status="PASS" starttime="20230717 10:49:39.386" endtime="20230717 10:49:39.386"/>
</return>
<msg timestamp="20230717 10:49:39.386" level="INFO">${text} = admin12121@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:39.375" endtime="20230717 10:49:39.386"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:39.387" endtime="20230717 10:49:39.387"/>
</return>
<msg timestamp="20230717 10:49:39.388" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Username"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230717 10:49:39.387" endtime="20230717 10:49:39.388"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:39.388" endtime="20230717 10:49:39.427"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230717 10:49:39.428" level="INFO">Fills the text 'admin12121@admin.com' in the given field.</msg>
<status status="PASS" starttime="20230717 10:49:39.427" endtime="20230717 10:49:39.459"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 10:49:39.459" level="INFO">Length is 20</msg>
<msg timestamp="20230717 10:49:39.459" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20230717 10:49:39.459" endtime="20230717 10:49:39.459"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 10:49:39.460" level="INFO">${STATE["Username"]} = admin12121@admin.com</msg>
<status status="PASS" starttime="20230717 10:49:39.460" endtime="20230717 10:49:39.460"/>
</kw>
<status status="PASS" starttime="20230717 10:49:39.459" endtime="20230717 10:49:39.460"/>
</branch>
<status status="PASS" starttime="20230717 10:49:39.459" endtime="20230717 10:49:39.460"/>
</if>
<status status="PASS" starttime="20230717 10:49:39.374" endtime="20230717 10:49:39.460"/>
</kw>
<kw name="When Click &quot;Log In&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:39.461" endtime="20230717 10:49:39.563"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:39.564" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230717 10:49:39.564" endtime="20230717 10:49:39.564"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:39.574" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:39.565" endtime="20230717 10:49:39.574"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.574" endtime="20230717 10:49:39.574"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230717 10:49:39.574" endtime="20230717 10:49:39.574"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:39.574" endtime="20230717 10:49:39.575"/>
</branch>
<status status="PASS" starttime="20230717 10:49:39.574" endtime="20230717 10:49:39.575"/>
</if>
<status status="PASS" starttime="20230717 10:49:39.564" endtime="20230717 10:49:39.575"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230717 10:49:39.575" endtime="20230717 10:49:39.615"/>
</kw>
<status status="PASS" starttime="20230717 10:49:39.461" endtime="20230717 10:49:39.615"/>
</kw>
<kw name="Then Required message &quot;Password&quot; displayed under &quot;Please enter password&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:39.617" endtime="20230717 10:49:39.617"/>
</return>
<msg timestamp="20230717 10:49:39.617" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Password"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230717 10:49:39.616" endtime="20230717 10:49:39.617"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:49:39.657" level="INFO">Text: 'Please enter password'</msg>
<status status="PASS" starttime="20230717 10:49:39.618" endtime="20230717 10:49:39.657"/>
</kw>
<status status="PASS" starttime="20230717 10:49:39.617" endtime="20230717 10:49:39.657"/>
</kw>
<status status="PASS" starttime="20230717 10:49:39.616" endtime="20230717 10:49:39.657"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:49:39.705" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:49:39.660" endtime="20230717 10:49:39.705"/>
</kw>
<status status="PASS" starttime="20230717 10:49:39.659" endtime="20230717 10:49:39.705"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:49:37.281" endtime="20230717 10:49:39.706"/>
</test>
<test id="s1-t12" name="LG-32 Verify if a user can't sign in with an empty User and password" line="96">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230717 10:49:39.719" endtime="20230717 10:49:39.719"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230717 10:49:39.720" level="INFO">{"browser": "chromium", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "D:\\Documents\\GitHub\\vite-react\\browser\\traces\\36d033a1-cd40-4df4-8e2d-6b9ed9e509c5"}</msg>
<msg timestamp="20230717 10:49:40.126" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"D:\\Documents\\GitHub\\vite-react\\browser\\traces\\36d033a1-cd40-4df4-8e2d-6b9ed9e509c5"}</msg>
<status status="PASS" starttime="20230717 10:49:39.720" endtime="20230717 10:49:40.126"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230717 10:49:40.706" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230717 10:49:40.706" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230717 10:49:40.127" endtime="20230717 10:49:40.706"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 10:49:40.707" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230717 10:49:40.706" endtime="20230717 10:49:40.707"/>
</kw>
<status status="PASS" starttime="20230717 10:49:39.719" endtime="20230717 10:49:40.707"/>
</kw>
<kw name="When Click change language &quot;Tiếng Anh&quot;" library="common" sourcename="Click change language &quot;${text}&quot;">
<kw name="Click" library="Browser">
<arg>//span[contains(@class, "ant-select-selection-item")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:40.709" endtime="20230717 10:49:41.259"/>
</kw>
<kw name="Click" library="Browser">
<arg>//*[contains(@class, "ant-select-item-option-content") and text()="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:41.260" endtime="20230717 10:49:41.615"/>
</kw>
<status status="PASS" starttime="20230717 10:49:40.708" endtime="20230717 10:49:41.615"/>
</kw>
<kw name="When Click &quot;Log In&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230717 10:49:41.618" endtime="20230717 10:49:42.011"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 10:49:42.012" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230717 10:49:42.012" endtime="20230717 10:49:42.012"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230717 10:49:42.024" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230717 10:49:42.012" endtime="20230717 10:49:42.024"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230717 10:49:42.024" endtime="20230717 10:49:42.024"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230717 10:49:42.024" endtime="20230717 10:49:42.024"/>
</kw>
<status status="NOT RUN" starttime="20230717 10:49:42.024" endtime="20230717 10:49:42.025"/>
</branch>
<status status="PASS" starttime="20230717 10:49:42.024" endtime="20230717 10:49:42.025"/>
</if>
<status status="PASS" starttime="20230717 10:49:42.012" endtime="20230717 10:49:42.025"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230717 10:49:42.025" endtime="20230717 10:49:42.054"/>
</kw>
<status status="PASS" starttime="20230717 10:49:41.617" endtime="20230717 10:49:42.055"/>
</kw>
<kw name="Then Required message &quot;Username&quot; displayed under &quot;Please enter username&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:42.057" endtime="20230717 10:49:42.057"/>
</return>
<msg timestamp="20230717 10:49:42.057" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Username"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230717 10:49:42.056" endtime="20230717 10:49:42.057"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:49:42.104" level="INFO">Text: 'Please enter username'</msg>
<status status="PASS" starttime="20230717 10:49:42.058" endtime="20230717 10:49:42.104"/>
</kw>
<status status="PASS" starttime="20230717 10:49:42.057" endtime="20230717 10:49:42.104"/>
</kw>
<status status="PASS" starttime="20230717 10:49:42.056" endtime="20230717 10:49:42.104"/>
</kw>
<kw name="Then Required message &quot;Password&quot; displayed under &quot;Please enter password&quot; field" library="common" sourcename="Required message &quot;${name}&quot; displayed under &quot;${text}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<return>
<value>xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="${name}"]/../../*[contains(@class, "ant-form-item")]${xpath}</value>
<status status="PASS" starttime="20230717 10:49:42.106" endtime="20230717 10:49:42.106"/>
</return>
<msg timestamp="20230717 10:49:42.106" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Password"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20230717 10:49:42.105" endtime="20230717 10:49:42.106"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230717 10:49:42.142" level="INFO">Text: 'Please enter password'</msg>
<status status="PASS" starttime="20230717 10:49:42.107" endtime="20230717 10:49:42.142"/>
</kw>
<status status="PASS" starttime="20230717 10:49:42.106" endtime="20230717 10:49:42.142"/>
</kw>
<status status="PASS" starttime="20230717 10:49:42.105" endtime="20230717 10:49:42.143"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230717 10:49:42.194" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230717 10:49:42.144" endtime="20230717 10:49:42.194"/>
</kw>
<status status="PASS" starttime="20230717 10:49:42.144" endtime="20230717 10:49:42.194"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="PASS" starttime="20230717 10:49:39.712" endtime="20230717 10:49:42.196"/>
</test>
<status status="PASS" starttime="20230717 10:48:43.653" endtime="20230717 10:49:42.202"/>
</suite>
<statistics>
<total>
<stat pass="12" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="12" fail="0" skip="0">@regression</stat>
<stat pass="12" fail="0" skip="0">@smoketest</stat>
</tag>
<suite>
<stat pass="12" fail="0" skip="0" id="s1" name="SignIn">SignIn</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
