<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230721 08:42:52.055" rpa="false" schemaversion="4">
<suite id="s1" name="Crudmainstore" source="c:\Users\Admin\Documents\GitHub\vite-react\test\testcases\crudmainstore.robot">
<test id="s1-t1" name="STR-40 Verify that admin CAN edit Tên cửa hàng successfully" line="7">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230721 08:42:53.138" endtime="20230721 08:42:53.144"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230721 08:42:53.145" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\GitHub\\vite-react\\browser\\traces\\3f9a6126-9497-4b81-ba75-e9f92807e44c"}</msg>
<msg timestamp="20230721 08:42:53.675" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\GitHub\\vite-react\\browser\\traces\\3f9a6126-9497-4b81-ba75-e9f92807e44c"}</msg>
<status status="PASS" starttime="20230721 08:42:53.144" endtime="20230721 08:42:53.677"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230721 08:42:54.599" level="INFO">Successfully initialized new page object and opened url: http://localhost:5173</msg>
<msg timestamp="20230721 08:42:54.600" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20230721 08:42:53.677" endtime="20230721 08:42:54.600"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230721 08:42:54.603" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20230721 08:42:54.601" endtime="20230721 08:42:54.603"/>
</kw>
<status status="PASS" starttime="20230721 08:42:53.138" endtime="20230721 08:42:54.603"/>
</kw>
<kw name="When Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Tên đăng nhập&quot; with &quot;admin_balan@getnada.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:42:54.606" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230721 08:42:54.605" endtime="20230721 08:42:54.606"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:42:54.607" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230721 08:42:54.606" endtime="20230721 08:42:54.607"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230721 08:42:54.607" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230721 08:42:54.607" endtime="20230721 08:42:54.607"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:42:54.608" level="INFO">Length is 0</msg>
<msg timestamp="20230721 08:42:54.608" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230721 08:42:54.608" endtime="20230721 08:42:54.608"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230721 08:42:54.609" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230721 08:42:54.608" endtime="20230721 08:42:54.609"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:42:54.609" level="INFO">Length is 0</msg>
<msg timestamp="20230721 08:42:54.611" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230721 08:42:54.609" endtime="20230721 08:42:54.611"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.611" endtime="20230721 08:42:54.611"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.611" endtime="20230721 08:42:54.612"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:54.611" endtime="20230721 08:42:54.612"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.612" endtime="20230721 08:42:54.612"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.612" endtime="20230721 08:42:54.613"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.613" endtime="20230721 08:42:54.613"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:54.612" endtime="20230721 08:42:54.613"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.614" endtime="20230721 08:42:54.614"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.614" endtime="20230721 08:42:54.614"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:54.613" endtime="20230721 08:42:54.615"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.615" endtime="20230721 08:42:54.615"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.615" endtime="20230721 08:42:54.616"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:54.615" endtime="20230721 08:42:54.616"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.616" endtime="20230721 08:42:54.616"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:54.616" endtime="20230721 08:42:54.617"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230721 08:42:54.617" endtime="20230721 08:42:54.617"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:54.617" endtime="20230721 08:42:54.617"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.618" endtime="20230721 08:42:54.618"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.618" endtime="20230721 08:42:54.618"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:54.618" endtime="20230721 08:42:54.619"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.619" endtime="20230721 08:42:54.619"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:54.619" endtime="20230721 08:42:54.619"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.620" endtime="20230721 08:42:54.620"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:54.619" endtime="20230721 08:42:54.620"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.620" endtime="20230721 08:42:54.621"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:54.620" endtime="20230721 08:42:54.621"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230721 08:42:54.621" endtime="20230721 08:42:54.621"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:54.621" endtime="20230721 08:42:54.621"/>
</branch>
<status status="PASS" starttime="20230721 08:42:54.611" endtime="20230721 08:42:54.622"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:42:54.622" level="INFO">Length is 23</msg>
<msg timestamp="20230721 08:42:54.622" level="INFO">${cnt} = 23</msg>
<status status="PASS" starttime="20230721 08:42:54.622" endtime="20230721 08:42:54.622"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230721 08:42:54.623" level="INFO">${text} = admin_balan@getnada.com</msg>
<status status="PASS" starttime="20230721 08:42:54.623" endtime="20230721 08:42:54.623"/>
</kw>
<status status="PASS" starttime="20230721 08:42:54.623" endtime="20230721 08:42:54.623"/>
</branch>
<status status="PASS" starttime="20230721 08:42:54.623" endtime="20230721 08:42:54.623"/>
</if>
<msg timestamp="20230721 08:42:54.623" level="INFO">${text} = admin_balan@getnada.com</msg>
<status status="PASS" starttime="20230721 08:42:54.605" endtime="20230721 08:42:54.624"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230721 08:42:54.624" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên đăng nhập"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230721 08:42:54.624" endtime="20230721 08:42:54.624"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230721 08:42:54.624" endtime="20230721 08:42:55.691"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230721 08:42:55.691" level="INFO">Fills the text 'admin_balan@getnada.com' in the given field.</msg>
<status status="PASS" starttime="20230721 08:42:55.691" endtime="20230721 08:42:55.714"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:42:55.715" level="INFO">Length is 23</msg>
<msg timestamp="20230721 08:42:55.715" level="INFO">${cnt} = 23</msg>
<status status="PASS" starttime="20230721 08:42:55.715" endtime="20230721 08:42:55.715"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230721 08:42:55.717" level="INFO">${STATE["Tên đăng nhập"]} = admin_balan@getnada.com</msg>
<status status="PASS" starttime="20230721 08:42:55.716" endtime="20230721 08:42:55.717"/>
</kw>
<status status="PASS" starttime="20230721 08:42:55.715" endtime="20230721 08:42:55.717"/>
</branch>
<status status="PASS" starttime="20230721 08:42:55.715" endtime="20230721 08:42:55.717"/>
</if>
<status status="PASS" starttime="20230721 08:42:54.604" endtime="20230721 08:42:55.717"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mật khẩu&quot; with &quot;Ari123456#&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:42:55.718" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230721 08:42:55.718" endtime="20230721 08:42:55.718"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:42:55.718" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230721 08:42:55.718" endtime="20230721 08:42:55.718"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230721 08:42:55.719" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230721 08:42:55.719" endtime="20230721 08:42:55.719"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:42:55.719" level="INFO">Length is 0</msg>
<msg timestamp="20230721 08:42:55.719" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230721 08:42:55.719" endtime="20230721 08:42:55.719"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230721 08:42:55.719" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230721 08:42:55.719" endtime="20230721 08:42:55.720"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:42:55.720" level="INFO">Length is 0</msg>
<msg timestamp="20230721 08:42:55.720" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230721 08:42:55.720" endtime="20230721 08:42:55.720"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.720" endtime="20230721 08:42:55.720"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.720" endtime="20230721 08:42:55.721"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.720" endtime="20230721 08:42:55.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.721" endtime="20230721 08:42:55.721"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.721" endtime="20230721 08:42:55.721"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.721" endtime="20230721 08:42:55.721"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.721" endtime="20230721 08:42:55.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.722" endtime="20230721 08:42:55.722"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.722" endtime="20230721 08:42:55.722"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.721" endtime="20230721 08:42:55.722"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.722" endtime="20230721 08:42:55.723"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.723" endtime="20230721 08:42:55.723"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.722" endtime="20230721 08:42:55.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.723" endtime="20230721 08:42:55.723"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.723" endtime="20230721 08:42:55.724"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230721 08:42:55.724" endtime="20230721 08:42:55.724"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.724" endtime="20230721 08:42:55.724"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.724" endtime="20230721 08:42:55.724"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.725" endtime="20230721 08:42:55.725"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.724" endtime="20230721 08:42:55.725"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.725" endtime="20230721 08:42:55.725"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.725" endtime="20230721 08:42:55.725"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.725" endtime="20230721 08:42:55.726"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.725" endtime="20230721 08:42:55.726"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.726" endtime="20230721 08:42:55.726"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.726" endtime="20230721 08:42:55.726"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.726" endtime="20230721 08:42:55.726"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.726" endtime="20230721 08:42:55.726"/>
</branch>
<status status="PASS" starttime="20230721 08:42:55.720" endtime="20230721 08:42:55.727"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:42:55.727" level="INFO">Length is 10</msg>
<msg timestamp="20230721 08:42:55.727" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230721 08:42:55.727" endtime="20230721 08:42:55.727"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230721 08:42:55.728" level="INFO">${text} = Ari123456#</msg>
<status status="PASS" starttime="20230721 08:42:55.727" endtime="20230721 08:42:55.728"/>
</kw>
<status status="PASS" starttime="20230721 08:42:55.727" endtime="20230721 08:42:55.728"/>
</branch>
<status status="PASS" starttime="20230721 08:42:55.727" endtime="20230721 08:42:55.728"/>
</if>
<msg timestamp="20230721 08:42:55.728" level="INFO">${text} = Ari123456#</msg>
<status status="PASS" starttime="20230721 08:42:55.718" endtime="20230721 08:42:55.728"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230721 08:42:55.728" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230721 08:42:55.728" endtime="20230721 08:42:55.728"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230721 08:42:55.729" endtime="20230721 08:42:55.762"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230721 08:42:55.763" level="INFO">Fills the text 'Ari123456#' in the given field.</msg>
<status status="PASS" starttime="20230721 08:42:55.762" endtime="20230721 08:42:55.795"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:42:55.796" level="INFO">Length is 10</msg>
<msg timestamp="20230721 08:42:55.796" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20230721 08:42:55.796" endtime="20230721 08:42:55.796"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230721 08:42:55.797" level="INFO">${STATE["Mật khẩu"]} = Ari123456#</msg>
<status status="PASS" starttime="20230721 08:42:55.797" endtime="20230721 08:42:55.797"/>
</kw>
<status status="PASS" starttime="20230721 08:42:55.796" endtime="20230721 08:42:55.797"/>
</branch>
<status status="PASS" starttime="20230721 08:42:55.796" endtime="20230721 08:42:55.798"/>
</if>
<status status="PASS" starttime="20230721 08:42:55.717" endtime="20230721 08:42:55.798"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230721 08:42:55.798" endtime="20230721 08:42:55.860"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:42:55.860" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230721 08:42:55.860" endtime="20230721 08:42:55.860"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230721 08:42:55.870" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230721 08:42:55.861" endtime="20230721 08:42:55.870"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.872" endtime="20230721 08:42:55.872"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.872" endtime="20230721 08:42:55.872"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.871" endtime="20230721 08:42:55.872"/>
</branch>
<status status="PASS" starttime="20230721 08:42:55.870" endtime="20230721 08:42:55.873"/>
</if>
<status status="PASS" starttime="20230721 08:42:55.860" endtime="20230721 08:42:55.873"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230721 08:42:55.873" endtime="20230721 08:42:55.895"/>
</kw>
<status status="PASS" starttime="20230721 08:42:55.798" endtime="20230721 08:42:55.896"/>
</kw>
<kw name="User look message &quot;Đăng nhập thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230721 08:42:55.897" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230721 08:42:55.897" endtime="20230721 08:42:55.897"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:42:55.898" level="INFO">Length is 0</msg>
<msg timestamp="20230721 08:42:55.898" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230721 08:42:55.897" endtime="20230721 08:42:55.898"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230721 08:42:55.898" endtime="20230721 08:42:55.898"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:55.898" endtime="20230721 08:42:55.898"/>
</branch>
<status status="PASS" starttime="20230721 08:42:55.898" endtime="20230721 08:42:55.898"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230721 08:42:56.373" level="INFO">Text: 'Đăng nhập thành công'</msg>
<status status="PASS" starttime="20230721 08:42:55.899" endtime="20230721 08:42:56.374"/>
</kw>
<status status="PASS" starttime="20230721 08:42:55.899" endtime="20230721 08:42:56.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:42:56.377" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230721 08:42:56.375" endtime="20230721 08:42:56.378"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230721 08:42:56.725" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230721 08:42:56.725" level="INFO">See also file:///C:/Users/Admin/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230721 08:42:56.725" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230721 08:42:56.380" endtime="20230721 08:42:56.733"/>
</kw>
<status status="FAIL" starttime="20230721 08:42:56.379" endtime="20230721 08:42:56.733"/>
</kw>
<msg timestamp="20230721 08:42:56.734" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230721 08:42:56.378" endtime="20230721 08:42:56.734"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230721 08:42:56.734" endtime="20230721 08:42:56.734"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:56.734" endtime="20230721 08:42:56.734"/>
</branch>
<status status="PASS" starttime="20230721 08:42:56.734" endtime="20230721 08:42:56.734"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:42:56.735" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230721 08:42:56.735" endtime="20230721 08:42:56.735"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230721 08:42:56.747" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230721 08:42:56.736" endtime="20230721 08:42:56.748"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230721 08:42:56.748" endtime="20230721 08:42:56.748"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:42:56.748" endtime="20230721 08:42:56.748"/>
</branch>
<status status="PASS" starttime="20230721 08:42:56.748" endtime="20230721 08:42:56.748"/>
</if>
<status status="PASS" starttime="20230721 08:42:56.735" endtime="20230721 08:42:56.748"/>
</kw>
<status status="PASS" starttime="20230721 08:42:55.896" endtime="20230721 08:42:56.748"/>
</kw>
<status status="PASS" starttime="20230721 08:42:54.604" endtime="20230721 08:42:56.749"/>
</kw>
<kw name="When Click &quot;Quản lý cửa hàng&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230721 08:42:56.751" endtime="20230721 08:42:59.771"/>
</kw>
<status status="PASS" starttime="20230721 08:42:56.750" endtime="20230721 08:42:59.771"/>
</kw>
<kw name="when Click" library="Browser">
<arg>//*[contains(@class, "ant-table-row")][1]</arg>
<arg>left</arg>
<arg>2</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230721 08:42:59.772" endtime="20230721 08:43:00.553"/>
</kw>
<kw name="when Enter &quot;text&quot; in &quot;Tên cửa hàng&quot; with &quot;Cửa hàng bán thịt sạch&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:43:00.557" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20230721 08:43:00.556" endtime="20230721 08:43:00.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:43:00.559" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20230721 08:43:00.558" endtime="20230721 08:43:00.560"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230721 08:43:00.560" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20230721 08:43:00.560" endtime="20230721 08:43:00.561"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:43:00.561" level="INFO">Length is 0</msg>
<msg timestamp="20230721 08:43:00.561" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20230721 08:43:00.561" endtime="20230721 08:43:00.561"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230721 08:43:00.562" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230721 08:43:00.562" endtime="20230721 08:43:00.562"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:43:00.562" level="INFO">Length is 0</msg>
<msg timestamp="20230721 08:43:00.563" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230721 08:43:00.562" endtime="20230721 08:43:00.563"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.563" endtime="20230721 08:43:00.564"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.564" endtime="20230721 08:43:00.564"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:00.563" endtime="20230721 08:43:00.564"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.565" endtime="20230721 08:43:00.566"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.566" endtime="20230721 08:43:00.566"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.566" endtime="20230721 08:43:00.566"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:00.565" endtime="20230721 08:43:00.567"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.567" endtime="20230721 08:43:00.567"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.568" endtime="20230721 08:43:00.568"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:00.567" endtime="20230721 08:43:00.568"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.569" endtime="20230721 08:43:00.569"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.569" endtime="20230721 08:43:00.569"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:00.568" endtime="20230721 08:43:00.569"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.570" endtime="20230721 08:43:00.570"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:00.570" endtime="20230721 08:43:00.571"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20230721 08:43:00.572" endtime="20230721 08:43:00.572"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:00.571" endtime="20230721 08:43:00.573"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=55555555</arg>
<arg>max=999999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.573" endtime="20230721 08:43:00.573"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.574" endtime="20230721 08:43:00.574"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:00.573" endtime="20230721 08:43:00.574"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.575" endtime="20230721 08:43:00.575"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:00.574" endtime="20230721 08:43:00.575"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.576" endtime="20230721 08:43:00.576"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:00.575" endtime="20230721 08:43:00.576"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.576" endtime="20230721 08:43:00.577"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:00.576" endtime="20230721 08:43:00.577"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20230721 08:43:00.577" endtime="20230721 08:43:00.578"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:00.577" endtime="20230721 08:43:00.578"/>
</branch>
<status status="PASS" starttime="20230721 08:43:00.563" endtime="20230721 08:43:00.578"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:43:00.579" level="INFO">Length is 22</msg>
<msg timestamp="20230721 08:43:00.579" level="INFO">${cnt} = 22</msg>
<status status="PASS" starttime="20230721 08:43:00.578" endtime="20230721 08:43:00.579"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230721 08:43:00.581" level="INFO">${text} = Cửa hàng bán thịt sạch</msg>
<status status="PASS" starttime="20230721 08:43:00.580" endtime="20230721 08:43:00.581"/>
</kw>
<status status="PASS" starttime="20230721 08:43:00.580" endtime="20230721 08:43:00.581"/>
</branch>
<status status="PASS" starttime="20230721 08:43:00.580" endtime="20230721 08:43:00.581"/>
</if>
<msg timestamp="20230721 08:43:00.582" level="INFO">${text} = Cửa hàng bán thịt sạch</msg>
<status status="PASS" starttime="20230721 08:43:00.556" endtime="20230721 08:43:00.582"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20230721 08:43:00.583" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên cửa hàng"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20230721 08:43:00.582" endtime="20230721 08:43:00.583"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20230721 08:43:00.583" endtime="20230721 08:43:01.173"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230721 08:43:01.174" level="INFO">Fills the text 'Cửa hàng bán thịt sạch' in the given field.</msg>
<status status="PASS" starttime="20230721 08:43:01.173" endtime="20230721 08:43:01.199"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:43:01.200" level="INFO">Length is 22</msg>
<msg timestamp="20230721 08:43:01.200" level="INFO">${cnt} = 22</msg>
<status status="PASS" starttime="20230721 08:43:01.200" endtime="20230721 08:43:01.200"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230721 08:43:01.201" level="INFO">${STATE["Tên cửa hàng"]} = Cửa hàng bán thịt sạch</msg>
<status status="PASS" starttime="20230721 08:43:01.201" endtime="20230721 08:43:01.201"/>
</kw>
<status status="PASS" starttime="20230721 08:43:01.200" endtime="20230721 08:43:01.201"/>
</branch>
<status status="PASS" starttime="20230721 08:43:01.200" endtime="20230721 08:43:01.201"/>
</if>
<status status="PASS" starttime="20230721 08:43:00.555" endtime="20230721 08:43:01.202"/>
</kw>
<kw name="when Click &quot;Lưu&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230721 08:43:01.202" endtime="20230721 08:43:01.684"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:43:01.685" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20230721 08:43:01.685" endtime="20230721 08:43:01.686"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230721 08:43:01.692" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230721 08:43:01.686" endtime="20230721 08:43:01.692"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230721 08:43:01.692" endtime="20230721 08:43:01.692"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230721 08:43:01.692" endtime="20230721 08:43:01.693"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:01.692" endtime="20230721 08:43:01.693"/>
</branch>
<status status="PASS" starttime="20230721 08:43:01.692" endtime="20230721 08:43:01.693"/>
</if>
<status status="PASS" starttime="20230721 08:43:01.685" endtime="20230721 08:43:01.693"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="PASS" starttime="20230721 08:43:01.693" endtime="20230721 08:43:01.726"/>
</kw>
<status status="PASS" starttime="20230721 08:43:01.202" endtime="20230721 08:43:01.727"/>
</kw>
<kw name="when User look message &quot;Chỉnh sửa cửa hàng thành công.&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230721 08:43:01.729" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20230721 08:43:01.728" endtime="20230721 08:43:01.729"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230721 08:43:01.729" level="INFO">Length is 0</msg>
<msg timestamp="20230721 08:43:01.730" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20230721 08:43:01.729" endtime="20230721 08:43:01.730"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20230721 08:43:01.731" endtime="20230721 08:43:01.731"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:01.730" endtime="20230721 08:43:01.731"/>
</branch>
<status status="PASS" starttime="20230721 08:43:01.730" endtime="20230721 08:43:01.731"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230721 08:43:01.845" level="INFO">Text: 'Chỉnh sửa cửa hàng thành công.'</msg>
<status status="PASS" starttime="20230721 08:43:01.732" endtime="20230721 08:43:01.845"/>
</kw>
<status status="PASS" starttime="20230721 08:43:01.731" endtime="20230721 08:43:01.846"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:43:01.847" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20230721 08:43:01.847" endtime="20230721 08:43:01.847"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230721 08:43:02.066" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230721 08:43:02.067" level="INFO">See also file:///C:/Users/Admin/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230721 08:43:02.067" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230721 08:43:01.849" endtime="20230721 08:43:02.068"/>
</kw>
<status status="FAIL" starttime="20230721 08:43:01.848" endtime="20230721 08:43:02.069"/>
</kw>
<msg timestamp="20230721 08:43:02.069" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20230721 08:43:01.847" endtime="20230721 08:43:02.069"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230721 08:43:02.069" endtime="20230721 08:43:02.070"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:02.069" endtime="20230721 08:43:02.070"/>
</branch>
<status status="PASS" starttime="20230721 08:43:02.069" endtime="20230721 08:43:02.070"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:43:02.072" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20230721 08:43:02.071" endtime="20230721 08:43:02.072"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230721 08:43:02.079" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230721 08:43:02.072" endtime="20230721 08:43:02.080"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Element Is Not Exist" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20230721 08:43:02.081" endtime="20230721 08:43:02.081"/>
</kw>
<status status="NOT RUN" starttime="20230721 08:43:02.080" endtime="20230721 08:43:02.081"/>
</branch>
<status status="PASS" starttime="20230721 08:43:02.080" endtime="20230721 08:43:02.081"/>
</if>
<status status="PASS" starttime="20230721 08:43:02.070" endtime="20230721 08:43:02.081"/>
</kw>
<status status="PASS" starttime="20230721 08:43:01.727" endtime="20230721 08:43:02.082"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230721 08:43:07.083" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20230721 08:43:02.082" endtime="20230721 08:43:07.083"/>
</kw>
<kw name="Then Verify motcuahang &quot;Cửa hàng bán thịt sạch&quot;" library="common" sourcename="Verify motcuahang &quot;${text}&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody/tr[2]/td[2]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:43:07.086" level="INFO">${element} = //tbody/tr[2]/td[2]</msg>
<status status="PASS" starttime="20230721 08:43:07.085" endtime="20230721 08:43:07.086"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230721 08:43:07.099" level="INFO">Text: 'Cửa hàng bán thịt sạch'</msg>
<status status="PASS" starttime="20230721 08:43:07.087" endtime="20230721 08:43:07.099"/>
</kw>
<status status="PASS" starttime="20230721 08:43:07.086" endtime="20230721 08:43:07.099"/>
</kw>
<status status="PASS" starttime="20230721 08:43:07.085" endtime="20230721 08:43:07.099"/>
</kw>
<kw name="then Verify th &quot;Tên cửa hàng&quot;" library="common" sourcename="Verify th &quot;${text}&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//span[contains(text(),'${text}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230721 08:43:07.101" level="INFO">${element} = //span[contains(text(),'Tên cửa hàng')]</msg>
<status status="PASS" starttime="20230721 08:43:07.101" endtime="20230721 08:43:07.101"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230721 08:43:26.768" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230721 08:43:26.769" level="INFO">See also file:///C:/Users/Admin/Documents/GitHub/vite-react/playwright-log.txt for additional details.</msg>
<msg timestamp="20230721 08:43:26.770" level="FAIL">Error: Could not find active page</msg>
<status status="FAIL" starttime="20230721 08:43:07.102" endtime="20230721 08:43:26.775"/>
</kw>
<status status="FAIL" starttime="20230721 08:43:07.101" endtime="20230721 08:43:26.775"/>
</kw>
<status status="FAIL" starttime="20230721 08:43:07.101" endtime="20230721 08:43:26.775"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230721 08:43:27.041" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230721 08:43:26.778" endtime="20230721 08:43:27.043"/>
</kw>
<status status="PASS" starttime="20230721 08:43:26.777" endtime="20230721 08:43:27.044"/>
</kw>
<tag>@regression</tag>
<tag>@smoketest</tag>
<status status="FAIL" starttime="20230721 08:42:53.135" endtime="20230721 08:43:27.046">Error: Could not find active page</status>
</test>
<status status="FAIL" starttime="20230721 08:42:52.062" endtime="20230721 08:43:27.055"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">@regression</stat>
<stat pass="0" fail="1" skip="0">@smoketest</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Crudmainstore">Crudmainstore</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230721 08:43:26.768" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
</errors>
</robot>
